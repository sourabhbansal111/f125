{"ast":null,"code":"/**\n * react-router v7.9.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use client\";\n\nimport { RSCRouterGlobalErrorBoundary, deserializeErrors, getHydrationData, populateRSCRouteModules } from \"./chunk-JG3XND5A.mjs\";\nimport { CRITICAL_CSS_DATA_ATTRIBUTE, ErrorResponseImpl, FrameworkContext, RSCRouterContext, RemixErrorBoundary, RouterProvider, UNSTABLE_TransitionEnabledRouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createContext, createRequestInit, createRouter, decodeViaTurboStream, getPatchRoutesOnNavigationFunction, getSingleFetchDataStrategyImpl, getTurboStreamSingleFetchDataStrategy, hydrationRouteProperties, invariant, isMutationMethod, mapRouteProperties, noActionDefinedError, setIsHydrated, shouldHydrateRouteLoader, singleFetchUrl, stripIndexParam, useFogOFWarDiscovery } from \"./chunk-UIGDSWPH.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  getContext,\n  unstable_instrumentations\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let {\n      loaderData\n    } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData({\n      state: ssrInfo.context.state,\n      routes,\n      getRouteInfo: routeId => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      location: window.location,\n      basename: window.__reactRouterContext?.basename,\n      isSpaMode: ssrInfo.context.isSpaMode\n    });\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    unstable_instrumentations,\n    mapRouteProperties,\n    future: {\n      middleware: ssrInfo.context.future.v8_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(() => router2, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      getContext: props.getContext,\n      unstable_instrumentations: props.unstable_instrumentations\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      setCriticalCss(void 0);\n    }\n  }, []);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && criticalCss === void 0) {\n      document.querySelectorAll(`[${CRITICAL_CSS_DATA_ATTRIBUTE}]`).forEach(element => element.remove());\n    }\n  }, [criticalCss]);\n  let [location2, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location2) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location2]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode,\n        routeDiscovery: ssrInfo.context.routeDiscovery\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location: location2\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router,\n      unstable_onError: props.unstable_onError\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\n\n// lib/rsc/browser.tsx\nimport * as React3 from \"react\";\nimport * as ReactDOM2 from \"react-dom\";\nfunction createCallServer({\n  createFromReadableStream,\n  createTemporaryReferenceSet,\n  encodeReply,\n  fetch: fetchImplementation = fetch\n}) {\n  const globalVar = window;\n  let landedActionId = 0;\n  return async (id, args) => {\n    let actionId = globalVar.__routerActionID = (globalVar.__routerActionID ?? (globalVar.__routerActionID = 0)) + 1;\n    const temporaryReferences = createTemporaryReferenceSet();\n    const payloadPromise = fetchImplementation(new Request(location.href, {\n      body: await encodeReply(args, {\n        temporaryReferences\n      }),\n      method: \"POST\",\n      headers: {\n        Accept: \"text/x-component\",\n        \"rsc-action-id\": id\n      }\n    })).then(response => {\n      if (!response.body) {\n        throw new Error(\"No response body\");\n      }\n      return createFromReadableStream(response.body, {\n        temporaryReferences\n      });\n    });\n    globalVar.__reactRouterDataRouter.__setPendingRerender(Promise.resolve(payloadPromise).then(async payload => {\n      if (payload.type === \"redirect\") {\n        if (payload.reload || isExternalLocation(payload.location)) {\n          window.location.href = payload.location;\n          return () => {};\n        }\n        return () => {\n          globalVar.__reactRouterDataRouter.navigate(payload.location, {\n            replace: payload.replace\n          });\n        };\n      }\n      if (payload.type !== \"action\") {\n        throw new Error(\"Unexpected payload type\");\n      }\n      const rerender = await payload.rerender;\n      if (rerender && landedActionId < actionId && globalVar.__routerActionID <= actionId) {\n        if (rerender.type === \"redirect\") {\n          if (rerender.reload || isExternalLocation(rerender.location)) {\n            window.location.href = rerender.location;\n            return;\n          }\n          return () => {\n            globalVar.__reactRouterDataRouter.navigate(rerender.location, {\n              replace: rerender.replace\n            });\n          };\n        }\n        return () => {\n          let lastMatch;\n          for (const match of rerender.matches) {\n            globalVar.__reactRouterDataRouter.patchRoutes(lastMatch?.id ?? null, [createRouteFromServerManifest(match)], true);\n            lastMatch = match;\n          }\n          window.__reactRouterDataRouter._internalSetStateDoNotUseOrYouWillBreakYourApp({\n            loaderData: Object.assign({}, globalVar.__reactRouterDataRouter.state.loaderData, rerender.loaderData),\n            errors: rerender.errors ? Object.assign({}, globalVar.__reactRouterDataRouter.state.errors, rerender.errors) : null\n          });\n        };\n      }\n      return () => {};\n    }).catch(() => {}));\n    return payloadPromise.then(payload => {\n      if (payload.type !== \"action\" && payload.type !== \"redirect\") {\n        throw new Error(\"Unexpected payload type\");\n      }\n      return payload.actionResult;\n    });\n  };\n}\nfunction createRouterFromPayload({\n  fetchImplementation,\n  createFromReadableStream,\n  getContext,\n  payload\n}) {\n  const globalVar = window;\n  if (globalVar.__reactRouterDataRouter && globalVar.__reactRouterRouteModules) return {\n    router: globalVar.__reactRouterDataRouter,\n    routeModules: globalVar.__reactRouterRouteModules\n  };\n  if (payload.type !== \"render\") throw new Error(\"Invalid payload type\");\n  globalVar.__reactRouterRouteModules = globalVar.__reactRouterRouteModules ?? {};\n  populateRSCRouteModules(globalVar.__reactRouterRouteModules, payload.matches);\n  let patches = /* @__PURE__ */new Map();\n  payload.patches?.forEach(patch => {\n    invariant(patch.parentId, \"Invalid patch parentId\");\n    if (!patches.has(patch.parentId)) {\n      patches.set(patch.parentId, []);\n    }\n    patches.get(patch.parentId)?.push(patch);\n  });\n  let routes = payload.matches.reduceRight((previous, match) => {\n    const route = createRouteFromServerManifest(match, payload);\n    if (previous.length > 0) {\n      route.children = previous;\n      let childrenToPatch = patches.get(match.id);\n      if (childrenToPatch) {\n        route.children.push(...childrenToPatch.map(r => createRouteFromServerManifest(r)));\n      }\n    }\n    return [route];\n  }, []);\n  globalVar.__reactRouterDataRouter = createRouter({\n    routes,\n    getContext,\n    basename: payload.basename,\n    history: createBrowserHistory(),\n    hydrationData: getHydrationData({\n      state: {\n        loaderData: payload.loaderData,\n        actionData: payload.actionData,\n        errors: payload.errors\n      },\n      routes,\n      getRouteInfo: routeId => {\n        let match = payload.matches.find(m => m.id === routeId);\n        invariant(match, \"Route not found in payload\");\n        return {\n          clientLoader: match.clientLoader,\n          hasLoader: match.hasLoader,\n          hasHydrateFallback: match.hydrateFallbackElement != null\n        };\n      },\n      location: payload.location,\n      basename: payload.basename,\n      isSpaMode: false\n    }),\n    async patchRoutesOnNavigation({\n      path,\n      signal\n    }) {\n      if (discoveredPaths.has(path)) {\n        return;\n      }\n      await fetchAndApplyManifestPatches([path], createFromReadableStream, fetchImplementation, signal);\n    },\n    // FIXME: Pass `build.ssr` into this function\n    dataStrategy: getRSCSingleFetchDataStrategy(() => globalVar.__reactRouterDataRouter, true, payload.basename, createFromReadableStream, fetchImplementation)\n  });\n  if (globalVar.__reactRouterDataRouter.state.initialized) {\n    globalVar.__routerInitialized = true;\n    globalVar.__reactRouterDataRouter.initialize();\n  } else {\n    globalVar.__routerInitialized = false;\n  }\n  let lastLoaderData = void 0;\n  globalVar.__reactRouterDataRouter.subscribe(({\n    loaderData,\n    actionData\n  }) => {\n    if (lastLoaderData !== loaderData) {\n      globalVar.__routerActionID = (globalVar.__routerActionID ?? (globalVar.__routerActionID = 0)) + 1;\n    }\n  });\n  globalVar.__reactRouterDataRouter._updateRoutesForHMR = routeUpdateByRouteId => {\n    const oldRoutes = window.__reactRouterDataRouter.routes;\n    const newRoutes = [];\n    function walkRoutes(routes2, parentId) {\n      return routes2.map(route => {\n        const routeUpdate = routeUpdateByRouteId.get(route.id);\n        if (routeUpdate) {\n          const {\n            routeModule,\n            hasAction,\n            hasComponent,\n            hasErrorBoundary,\n            hasLoader\n          } = routeUpdate;\n          const newRoute = createRouteFromServerManifest({\n            clientAction: routeModule.clientAction,\n            clientLoader: routeModule.clientLoader,\n            element: route.element,\n            errorElement: route.errorElement,\n            handle: route.handle,\n            hasAction,\n            hasComponent,\n            hasErrorBoundary,\n            hasLoader,\n            hydrateFallbackElement: route.hydrateFallbackElement,\n            id: route.id,\n            index: route.index,\n            links: routeModule.links,\n            meta: routeModule.meta,\n            parentId,\n            path: route.path,\n            shouldRevalidate: routeModule.shouldRevalidate\n          });\n          if (route.children) {\n            newRoute.children = walkRoutes(route.children, route.id);\n          }\n          return newRoute;\n        }\n        const updatedRoute = {\n          ...route\n        };\n        if (route.children) {\n          updatedRoute.children = walkRoutes(route.children, route.id);\n        }\n        return updatedRoute;\n      });\n    }\n    newRoutes.push(...walkRoutes(oldRoutes, void 0));\n    window.__reactRouterDataRouter._internalSetRoutes(newRoutes);\n  };\n  return {\n    router: globalVar.__reactRouterDataRouter,\n    routeModules: globalVar.__reactRouterRouteModules\n  };\n}\nvar renderedRoutesContext = createContext();\nfunction getRSCSingleFetchDataStrategy(getRouter, ssr, basename, createFromReadableStream, fetchImplementation) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(getRouter, match => {\n    let M = match;\n    return {\n      hasLoader: M.route.hasLoader,\n      hasClientLoader: M.route.hasClientLoader,\n      hasComponent: M.route.hasComponent,\n      hasAction: M.route.hasAction,\n      hasClientAction: M.route.hasClientAction,\n      hasShouldRevalidate: M.route.hasShouldRevalidate\n    };\n  },\n  // pass map into fetchAndDecode so it can add payloads\n  getFetchAndDecodeViaRSC(createFromReadableStream, fetchImplementation), ssr, basename,\n  // If the route has a component but we don't have an element, we need to hit\n  // the server loader flow regardless of whether the client loader calls\n  // `serverLoader` or not, otherwise we'll have nothing to render.\n  match => {\n    let M = match;\n    return M.route.hasComponent && !M.route.element;\n  });\n  return async args => args.runClientMiddleware(async () => {\n    let context = args.context;\n    context.set(renderedRoutesContext, []);\n    let results = await dataStrategy(args);\n    const renderedRoutesById = /* @__PURE__ */new Map();\n    for (const route of context.get(renderedRoutesContext)) {\n      if (!renderedRoutesById.has(route.id)) {\n        renderedRoutesById.set(route.id, []);\n      }\n      renderedRoutesById.get(route.id).push(route);\n    }\n    for (const match of args.matches) {\n      const renderedRoutes = renderedRoutesById.get(match.route.id);\n      if (renderedRoutes) {\n        for (const rendered of renderedRoutes) {\n          window.__reactRouterDataRouter.patchRoutes(rendered.parentId ?? null, [createRouteFromServerManifest(rendered)], true);\n        }\n      }\n    }\n    return results;\n  });\n}\nfunction getFetchAndDecodeViaRSC(createFromReadableStream, fetchImplementation) {\n  return async (args, basename, targetRoutes) => {\n    let {\n      request,\n      context\n    } = args;\n    let url = singleFetchUrl(request.url, basename, \"rsc\");\n    if (request.method === \"GET\") {\n      url = stripIndexParam(url);\n      if (targetRoutes) {\n        url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n      }\n    }\n    let res = await fetchImplementation(new Request(url, await createRequestInit(request)));\n    if (res.status >= 400 && !res.headers.has(\"X-Remix-Response\")) {\n      throw new ErrorResponseImpl(res.status, res.statusText, await res.text());\n    }\n    invariant(res.body, \"No response body to decode\");\n    try {\n      const payload = await createFromReadableStream(res.body, {\n        temporaryReferences: void 0\n      });\n      if (payload.type === \"redirect\") {\n        return {\n          status: res.status,\n          data: {\n            redirect: {\n              redirect: payload.location,\n              reload: payload.reload,\n              replace: payload.replace,\n              revalidate: false,\n              status: payload.status\n            }\n          }\n        };\n      }\n      if (payload.type !== \"render\") {\n        throw new Error(\"Unexpected payload type\");\n      }\n      context.get(renderedRoutesContext).push(...payload.matches);\n      let results = {\n        routes: {}\n      };\n      const dataKey = isMutationMethod(request.method) ? \"actionData\" : \"loaderData\";\n      for (let [routeId, data] of Object.entries(payload[dataKey] || {})) {\n        results.routes[routeId] = {\n          data\n        };\n      }\n      if (payload.errors) {\n        for (let [routeId, error] of Object.entries(payload.errors)) {\n          results.routes[routeId] = {\n            error\n          };\n        }\n      }\n      return {\n        status: res.status,\n        data: results\n      };\n    } catch (e) {\n      throw new Error(\"Unable to decode RSC response\");\n    }\n  };\n}\nfunction RSCHydratedRouter({\n  createFromReadableStream,\n  fetch: fetchImplementation = fetch,\n  payload,\n  routeDiscovery = \"eager\",\n  getContext\n}) {\n  if (payload.type !== \"render\") throw new Error(\"Invalid payload type\");\n  let {\n    router: router2,\n    routeModules\n  } = React3.useMemo(() => createRouterFromPayload({\n    payload,\n    fetchImplementation,\n    getContext,\n    createFromReadableStream\n  }), [createFromReadableStream, payload, fetchImplementation, getContext]);\n  React3.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  React3.useLayoutEffect(() => {\n    const globalVar = window;\n    if (!globalVar.__routerInitialized) {\n      globalVar.__routerInitialized = true;\n      globalVar.__reactRouterDataRouter.initialize();\n    }\n  }, []);\n  let [location2, setLocation] = React3.useState(router2.state.location);\n  React3.useLayoutEffect(() => router2.subscribe(newState => {\n    if (newState.location !== location2) {\n      setLocation(newState.location);\n    }\n  }), [router2, location2]);\n  React3.useEffect(() => {\n    if (routeDiscovery === \"lazy\" ||\n    // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let paths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (paths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(paths, createFromReadableStream, fetchImplementation);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n  }, [routeDiscovery, createFromReadableStream, fetchImplementation]);\n  const frameworkContext = {\n    future: {\n      // These flags have no runtime impact so can always be false.  If we add\n      // flags that drive runtime behavior they'll need to be proxied through.\n      v8_middleware: false,\n      unstable_subResourceIntegrity: false\n    },\n    isSpaMode: false,\n    ssr: true,\n    criticalCss: \"\",\n    manifest: {\n      routes: {},\n      version: \"1\",\n      url: \"\",\n      entry: {\n        module: \"\",\n        imports: []\n      }\n    },\n    routeDiscovery: {\n      mode: \"lazy\",\n      manifestPath: \"/__manifest\"\n    },\n    routeModules\n  };\n  return /* @__PURE__ */React3.createElement(RSCRouterContext.Provider, {\n    value: true\n  }, /* @__PURE__ */React3.createElement(RSCRouterGlobalErrorBoundary, {\n    location: location2\n  }, /* @__PURE__ */React3.createElement(FrameworkContext.Provider, {\n    value: frameworkContext\n  }, /* @__PURE__ */React3.createElement(UNSTABLE_TransitionEnabledRouterProvider, {\n    router: router2,\n    flushSync: ReactDOM2.flushSync\n  }))));\n}\nfunction createRouteFromServerManifest(match, payload) {\n  let hasInitialData = payload && match.id in payload.loaderData;\n  let initialData = payload?.loaderData[match.id];\n  let hasInitialError = payload?.errors && match.id in payload.errors;\n  let initialError = payload?.errors?.[match.id];\n  let isHydrationRequest = match.clientLoader?.hydrate === true || !match.hasLoader ||\n  // If the route has a component but we don't have an element, we need to hit\n  // the server loader flow regardless of whether the client loader calls\n  // `serverLoader` or not, otherwise we'll have nothing to render.\n  match.hasComponent && !match.element;\n  invariant(window.__reactRouterRouteModules);\n  populateRSCRouteModules(window.__reactRouterRouteModules, match);\n  let dataRoute = {\n    id: match.id,\n    element: match.element,\n    errorElement: match.errorElement,\n    handle: match.handle,\n    hasErrorBoundary: match.hasErrorBoundary,\n    hydrateFallbackElement: match.hydrateFallbackElement,\n    index: match.index,\n    loader: match.clientLoader ? async (args, singleFetch) => {\n      try {\n        let result = await match.clientLoader({\n          ...args,\n          serverLoader: () => {\n            preventInvalidServerHandlerCall(\"loader\", match.id, match.hasLoader);\n            if (isHydrationRequest) {\n              if (hasInitialData) {\n                return initialData;\n              }\n              if (hasInitialError) {\n                throw initialError;\n              }\n            }\n            return callSingleFetch(singleFetch);\n          }\n        });\n        return result;\n      } finally {\n        isHydrationRequest = false;\n      }\n    } :\n    // We always make the call in this RSC world since even if we don't\n    // have a `loader` we may need to get the `element` implementation\n    (_, singleFetch) => callSingleFetch(singleFetch),\n    action: match.clientAction ? (args, singleFetch) => match.clientAction({\n      ...args,\n      serverAction: async () => {\n        preventInvalidServerHandlerCall(\"action\", match.id, match.hasLoader);\n        return await callSingleFetch(singleFetch);\n      }\n    }) : match.hasAction ? (_, singleFetch) => callSingleFetch(singleFetch) : () => {\n      throw noActionDefinedError(\"action\", match.id);\n    },\n    path: match.path,\n    shouldRevalidate: match.shouldRevalidate,\n    // We always have a \"loader\" in this RSC world since even if we don't\n    // have a `loader` we may need to get the `element` implementation\n    hasLoader: true,\n    hasClientLoader: match.clientLoader != null,\n    hasAction: match.hasAction,\n    hasClientAction: match.clientAction != null,\n    hasShouldRevalidate: match.shouldRevalidate != null\n  };\n  if (typeof dataRoute.loader === \"function\") {\n    dataRoute.loader.hydrate = shouldHydrateRouteLoader(match.id, match.clientLoader, match.hasLoader, false);\n  }\n  return dataRoute;\n}\nfunction callSingleFetch(singleFetch) {\n  invariant(typeof singleFetch === \"function\", \"Invalid singleFetch parameter\");\n  return singleFetch();\n}\nfunction preventInvalidServerHandlerCall(type, routeId, hasHandler) {\n  if (!hasHandler) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${routeId}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nvar nextPaths = /* @__PURE__ */new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */new Set();\nvar URL_LIMIT = 7680;\nfunction getManifestUrl(paths) {\n  if (paths.length === 0) {\n    return null;\n  }\n  if (paths.length === 1) {\n    return new URL(`${paths[0]}.manifest`, window.location.origin);\n  }\n  const globalVar = window;\n  let basename = (globalVar.__reactRouterDataRouter.basename ?? \"\").replace(/^\\/|\\/$/g, \"\");\n  let url = new URL(`${basename}/.manifest`, window.location.origin);\n  url.searchParams.set(\"paths\", paths.sort().join(\",\"));\n  return url;\n}\nasync function fetchAndApplyManifestPatches(paths, createFromReadableStream, fetchImplementation, signal) {\n  let url = getManifestUrl(paths);\n  if (url == null) {\n    return;\n  }\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let response = await fetchImplementation(new Request(url, {\n    signal\n  }));\n  if (!response.body || response.status < 200 || response.status >= 300) {\n    throw new Error(\"Unable to fetch new route matches from the server\");\n  }\n  let payload = await createFromReadableStream(response.body, {\n    temporaryReferences: void 0\n  });\n  if (payload.type !== \"manifest\") {\n    throw new Error(\"Failed to patch routes\");\n  }\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n  payload.patches.forEach(p => {\n    window.__reactRouterDataRouter.patchRoutes(p.parentId ?? null, [createRouteFromServerManifest(p)]);\n  });\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\nfunction isExternalLocation(location2) {\n  const newLocation = new URL(location2, window.location.href);\n  return newLocation.origin !== window.location.origin;\n}\n\n// lib/rsc/html-stream/browser.ts\nfunction getRSCStream() {\n  let encoder = new TextEncoder();\n  let streamController = null;\n  let rscStream = new ReadableStream({\n    start(controller) {\n      if (typeof window === \"undefined\") {\n        return;\n      }\n      let handleChunk = chunk => {\n        if (typeof chunk === \"string\") {\n          controller.enqueue(encoder.encode(chunk));\n        } else {\n          controller.enqueue(chunk);\n        }\n      };\n      window.__FLIGHT_DATA || (window.__FLIGHT_DATA = []);\n      window.__FLIGHT_DATA.forEach(handleChunk);\n      window.__FLIGHT_DATA.push = chunk => {\n        handleChunk(chunk);\n        return 0;\n      };\n      streamController = controller;\n    }\n  });\n  if (typeof document !== \"undefined\" && document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      streamController?.close();\n    });\n  } else {\n    streamController?.close();\n  }\n  return rscStream;\n}\nexport { HydratedRouter, RouterProvider2 as RouterProvider, RSCHydratedRouter as unstable_RSCHydratedRouter, createCallServer as unstable_createCallServer, getRSCStream as unstable_getRSCStream };","map":{"version":3,"names":["RSCRouterGlobalErrorBoundary","deserializeErrors","getHydrationData","populateRSCRouteModules","CRITICAL_CSS_DATA_ATTRIBUTE","ErrorResponseImpl","FrameworkContext","RSCRouterContext","RemixErrorBoundary","RouterProvider","UNSTABLE_TransitionEnabledRouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createContext","createRequestInit","createRouter","decodeViaTurboStream","getPatchRoutesOnNavigationFunction","getSingleFetchDataStrategyImpl","getTurboStreamSingleFetchDataStrategy","hydrationRouteProperties","invariant","isMutationMethod","mapRouteProperties","noActionDefinedError","setIsHydrated","shouldHydrateRouteLoader","singleFetchUrl","stripIndexParam","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","sri","importMap","document","querySelector","textContent","JSON","parse","integrity","err","console","error","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","getContext","unstable_instrumentations","Error","localSsrInfo","stream","then","value","state","catch","e","routes","ssr","isSpaMode","hydrationData","loaderData","root","hasLoader","getRouteInfo","routeId","clientLoader","hasHydrateFallback","HydrateFallback","location","basename","errors","router2","history","future","middleware","v8_middleware","dataStrategy","patchRoutesOnNavigation","routeDiscovery","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","useEffect","querySelectorAll","forEach","element","remove","location2","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider","unstable_onError","React3","ReactDOM2","createCallServer","createFromReadableStream","createTemporaryReferenceSet","encodeReply","fetch","fetchImplementation","globalVar","landedActionId","id","args","actionId","__routerActionID","temporaryReferences","payloadPromise","Request","href","body","method","headers","Accept","response","__setPendingRerender","Promise","resolve","payload","type","reload","isExternalLocation","navigate","replace","rerender","lastMatch","match","matches","patchRoutes","createRouteFromServerManifest","_internalSetStateDoNotUseOrYouWillBreakYourApp","Object","assign","actionResult","createRouterFromPayload","patches","Map","patch","parentId","has","set","get","push","reduceRight","previous","route","length","children","childrenToPatch","map","r","actionData","find","m","hydrateFallbackElement","path","signal","discoveredPaths","fetchAndApplyManifestPatches","getRSCSingleFetchDataStrategy","__routerInitialized","lastLoaderData","_updateRoutesForHMR","routeUpdateByRouteId","oldRoutes","newRoutes","walkRoutes","routes2","routeUpdate","routeModule","hasAction","hasComponent","hasErrorBoundary","newRoute","clientAction","errorElement","handle","index","links","meta","shouldRevalidate","updatedRoute","_internalSetRoutes","renderedRoutesContext","getRouter","M","hasClientLoader","hasClientAction","hasShouldRevalidate","getFetchAndDecodeViaRSC","runClientMiddleware","results","renderedRoutesById","renderedRoutes","rendered","targetRoutes","request","url","searchParams","join","res","status","statusText","text","data","redirect","revalidate","dataKey","entries","RSCHydratedRouter","useMemo","navigator","connection","saveData","registerElement","el","tagName","getAttribute","pathname","URL","origin","nextPaths","add","fetchPatches","paths","Array","from","keys","filter","delete","debouncedFetchPatches","debounce","observer","MutationObserver","observe","documentElement","subtree","childList","attributes","attributeFilter","frameworkContext","unstable_subResourceIntegrity","version","entry","module","imports","mode","manifestPath","hasInitialData","initialData","hasInitialError","initialError","isHydrationRequest","hydrate","dataRoute","loader","singleFetch","result","serverLoader","preventInvalidServerHandlerCall","callSingleFetch","_","action","serverAction","hasHandler","fn","msg","Set","discoveredPathsMaxSize","URL_LIMIT","getManifestUrl","sort","toString","clear","p","addToFifoQueue","queue","size","first","values","next","callback","wait","timeoutId","clearTimeout","setTimeout","newLocation","getRSCStream","encoder","TextEncoder","streamController","rscStream","ReadableStream","start","controller","handleChunk","chunk","enqueue","encode","__FLIGHT_DATA","readyState","addEventListener","close","unstable_RSCHydratedRouter","unstable_createCallServer","unstable_getRSCStream"],"sources":["D:/F1Demo (2)/NewProject/f1-pitwall-react/node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\n * react-router v7.9.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use client\";\nimport {\n  RSCRouterGlobalErrorBoundary,\n  deserializeErrors,\n  getHydrationData,\n  populateRSCRouteModules\n} from \"./chunk-JG3XND5A.mjs\";\nimport {\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  ErrorResponseImpl,\n  FrameworkContext,\n  RSCRouterContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  UNSTABLE_TransitionEnabledRouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createContext,\n  createRequestInit,\n  createRouter,\n  decodeViaTurboStream,\n  getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategyImpl,\n  getTurboStreamSingleFetchDataStrategy,\n  hydrationRouteProperties,\n  invariant,\n  isMutationMethod,\n  mapRouteProperties,\n  noActionDefinedError,\n  setIsHydrated,\n  shouldHydrateRouteLoader,\n  singleFetchUrl,\n  stripIndexParam,\n  useFogOFWarDiscovery\n} from \"./chunk-UIGDSWPH.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  getContext,\n  unstable_instrumentations\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let { loaderData } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData({\n      state: ssrInfo.context.state,\n      routes,\n      getRouteInfo: (routeId) => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      location: window.location,\n      basename: window.__reactRouterContext?.basename,\n      isSpaMode: ssrInfo.context.isSpaMode\n    });\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    unstable_instrumentations,\n    mapRouteProperties,\n    future: {\n      middleware: ssrInfo.context.future.v8_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(\n      () => router2,\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.routeDiscovery,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      getContext: props.getContext,\n      unstable_instrumentations: props.unstable_instrumentations\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      setCriticalCss(void 0);\n    }\n  }, []);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && criticalCss === void 0) {\n      document.querySelectorAll(`[${CRITICAL_CSS_DATA_ATTRIBUTE}]`).forEach((element) => element.remove());\n    }\n  }, [criticalCss]);\n  let [location2, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location2) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location2]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.routeDiscovery,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode,\n          routeDiscovery: ssrInfo.context.routeDiscovery\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location: location2 }, /* @__PURE__ */ React2.createElement(\n        RouterProvider2,\n        {\n          router,\n          unstable_onError: props.unstable_onError\n        }\n      ))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\n\n// lib/rsc/browser.tsx\nimport * as React3 from \"react\";\nimport * as ReactDOM2 from \"react-dom\";\nfunction createCallServer({\n  createFromReadableStream,\n  createTemporaryReferenceSet,\n  encodeReply,\n  fetch: fetchImplementation = fetch\n}) {\n  const globalVar = window;\n  let landedActionId = 0;\n  return async (id, args) => {\n    let actionId = globalVar.__routerActionID = (globalVar.__routerActionID ?? (globalVar.__routerActionID = 0)) + 1;\n    const temporaryReferences = createTemporaryReferenceSet();\n    const payloadPromise = fetchImplementation(\n      new Request(location.href, {\n        body: await encodeReply(args, { temporaryReferences }),\n        method: \"POST\",\n        headers: {\n          Accept: \"text/x-component\",\n          \"rsc-action-id\": id\n        }\n      })\n    ).then((response) => {\n      if (!response.body) {\n        throw new Error(\"No response body\");\n      }\n      return createFromReadableStream(response.body, {\n        temporaryReferences\n      });\n    });\n    globalVar.__reactRouterDataRouter.__setPendingRerender(\n      Promise.resolve(payloadPromise).then(async (payload) => {\n        if (payload.type === \"redirect\") {\n          if (payload.reload || isExternalLocation(payload.location)) {\n            window.location.href = payload.location;\n            return () => {\n            };\n          }\n          return () => {\n            globalVar.__reactRouterDataRouter.navigate(payload.location, {\n              replace: payload.replace\n            });\n          };\n        }\n        if (payload.type !== \"action\") {\n          throw new Error(\"Unexpected payload type\");\n        }\n        const rerender = await payload.rerender;\n        if (rerender && landedActionId < actionId && globalVar.__routerActionID <= actionId) {\n          if (rerender.type === \"redirect\") {\n            if (rerender.reload || isExternalLocation(rerender.location)) {\n              window.location.href = rerender.location;\n              return;\n            }\n            return () => {\n              globalVar.__reactRouterDataRouter.navigate(rerender.location, {\n                replace: rerender.replace\n              });\n            };\n          }\n          return () => {\n            let lastMatch;\n            for (const match of rerender.matches) {\n              globalVar.__reactRouterDataRouter.patchRoutes(\n                lastMatch?.id ?? null,\n                [createRouteFromServerManifest(match)],\n                true\n              );\n              lastMatch = match;\n            }\n            window.__reactRouterDataRouter._internalSetStateDoNotUseOrYouWillBreakYourApp(\n              {\n                loaderData: Object.assign(\n                  {},\n                  globalVar.__reactRouterDataRouter.state.loaderData,\n                  rerender.loaderData\n                ),\n                errors: rerender.errors ? Object.assign(\n                  {},\n                  globalVar.__reactRouterDataRouter.state.errors,\n                  rerender.errors\n                ) : null\n              }\n            );\n          };\n        }\n        return () => {\n        };\n      }).catch(() => {\n      })\n    );\n    return payloadPromise.then((payload) => {\n      if (payload.type !== \"action\" && payload.type !== \"redirect\") {\n        throw new Error(\"Unexpected payload type\");\n      }\n      return payload.actionResult;\n    });\n  };\n}\nfunction createRouterFromPayload({\n  fetchImplementation,\n  createFromReadableStream,\n  getContext,\n  payload\n}) {\n  const globalVar = window;\n  if (globalVar.__reactRouterDataRouter && globalVar.__reactRouterRouteModules)\n    return {\n      router: globalVar.__reactRouterDataRouter,\n      routeModules: globalVar.__reactRouterRouteModules\n    };\n  if (payload.type !== \"render\") throw new Error(\"Invalid payload type\");\n  globalVar.__reactRouterRouteModules = globalVar.__reactRouterRouteModules ?? {};\n  populateRSCRouteModules(globalVar.__reactRouterRouteModules, payload.matches);\n  let patches = /* @__PURE__ */ new Map();\n  payload.patches?.forEach((patch) => {\n    invariant(patch.parentId, \"Invalid patch parentId\");\n    if (!patches.has(patch.parentId)) {\n      patches.set(patch.parentId, []);\n    }\n    patches.get(patch.parentId)?.push(patch);\n  });\n  let routes = payload.matches.reduceRight((previous, match) => {\n    const route = createRouteFromServerManifest(\n      match,\n      payload\n    );\n    if (previous.length > 0) {\n      route.children = previous;\n      let childrenToPatch = patches.get(match.id);\n      if (childrenToPatch) {\n        route.children.push(\n          ...childrenToPatch.map((r) => createRouteFromServerManifest(r))\n        );\n      }\n    }\n    return [route];\n  }, []);\n  globalVar.__reactRouterDataRouter = createRouter({\n    routes,\n    getContext,\n    basename: payload.basename,\n    history: createBrowserHistory(),\n    hydrationData: getHydrationData({\n      state: {\n        loaderData: payload.loaderData,\n        actionData: payload.actionData,\n        errors: payload.errors\n      },\n      routes,\n      getRouteInfo: (routeId) => {\n        let match = payload.matches.find((m) => m.id === routeId);\n        invariant(match, \"Route not found in payload\");\n        return {\n          clientLoader: match.clientLoader,\n          hasLoader: match.hasLoader,\n          hasHydrateFallback: match.hydrateFallbackElement != null\n        };\n      },\n      location: payload.location,\n      basename: payload.basename,\n      isSpaMode: false\n    }),\n    async patchRoutesOnNavigation({ path, signal }) {\n      if (discoveredPaths.has(path)) {\n        return;\n      }\n      await fetchAndApplyManifestPatches(\n        [path],\n        createFromReadableStream,\n        fetchImplementation,\n        signal\n      );\n    },\n    // FIXME: Pass `build.ssr` into this function\n    dataStrategy: getRSCSingleFetchDataStrategy(\n      () => globalVar.__reactRouterDataRouter,\n      true,\n      payload.basename,\n      createFromReadableStream,\n      fetchImplementation\n    )\n  });\n  if (globalVar.__reactRouterDataRouter.state.initialized) {\n    globalVar.__routerInitialized = true;\n    globalVar.__reactRouterDataRouter.initialize();\n  } else {\n    globalVar.__routerInitialized = false;\n  }\n  let lastLoaderData = void 0;\n  globalVar.__reactRouterDataRouter.subscribe(({ loaderData, actionData }) => {\n    if (lastLoaderData !== loaderData) {\n      globalVar.__routerActionID = (globalVar.__routerActionID ?? (globalVar.__routerActionID = 0)) + 1;\n    }\n  });\n  globalVar.__reactRouterDataRouter._updateRoutesForHMR = (routeUpdateByRouteId) => {\n    const oldRoutes = window.__reactRouterDataRouter.routes;\n    const newRoutes = [];\n    function walkRoutes(routes2, parentId) {\n      return routes2.map((route) => {\n        const routeUpdate = routeUpdateByRouteId.get(route.id);\n        if (routeUpdate) {\n          const {\n            routeModule,\n            hasAction,\n            hasComponent,\n            hasErrorBoundary,\n            hasLoader\n          } = routeUpdate;\n          const newRoute = createRouteFromServerManifest({\n            clientAction: routeModule.clientAction,\n            clientLoader: routeModule.clientLoader,\n            element: route.element,\n            errorElement: route.errorElement,\n            handle: route.handle,\n            hasAction,\n            hasComponent,\n            hasErrorBoundary,\n            hasLoader,\n            hydrateFallbackElement: route.hydrateFallbackElement,\n            id: route.id,\n            index: route.index,\n            links: routeModule.links,\n            meta: routeModule.meta,\n            parentId,\n            path: route.path,\n            shouldRevalidate: routeModule.shouldRevalidate\n          });\n          if (route.children) {\n            newRoute.children = walkRoutes(route.children, route.id);\n          }\n          return newRoute;\n        }\n        const updatedRoute = { ...route };\n        if (route.children) {\n          updatedRoute.children = walkRoutes(route.children, route.id);\n        }\n        return updatedRoute;\n      });\n    }\n    newRoutes.push(\n      ...walkRoutes(oldRoutes, void 0)\n    );\n    window.__reactRouterDataRouter._internalSetRoutes(newRoutes);\n  };\n  return {\n    router: globalVar.__reactRouterDataRouter,\n    routeModules: globalVar.__reactRouterRouteModules\n  };\n}\nvar renderedRoutesContext = createContext();\nfunction getRSCSingleFetchDataStrategy(getRouter, ssr, basename, createFromReadableStream, fetchImplementation) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let M = match;\n      return {\n        hasLoader: M.route.hasLoader,\n        hasClientLoader: M.route.hasClientLoader,\n        hasComponent: M.route.hasComponent,\n        hasAction: M.route.hasAction,\n        hasClientAction: M.route.hasClientAction,\n        hasShouldRevalidate: M.route.hasShouldRevalidate\n      };\n    },\n    // pass map into fetchAndDecode so it can add payloads\n    getFetchAndDecodeViaRSC(createFromReadableStream, fetchImplementation),\n    ssr,\n    basename,\n    // If the route has a component but we don't have an element, we need to hit\n    // the server loader flow regardless of whether the client loader calls\n    // `serverLoader` or not, otherwise we'll have nothing to render.\n    (match) => {\n      let M = match;\n      return M.route.hasComponent && !M.route.element;\n    }\n  );\n  return async (args) => args.runClientMiddleware(async () => {\n    let context = args.context;\n    context.set(renderedRoutesContext, []);\n    let results = await dataStrategy(args);\n    const renderedRoutesById = /* @__PURE__ */ new Map();\n    for (const route of context.get(renderedRoutesContext)) {\n      if (!renderedRoutesById.has(route.id)) {\n        renderedRoutesById.set(route.id, []);\n      }\n      renderedRoutesById.get(route.id).push(route);\n    }\n    for (const match of args.matches) {\n      const renderedRoutes = renderedRoutesById.get(match.route.id);\n      if (renderedRoutes) {\n        for (const rendered of renderedRoutes) {\n          window.__reactRouterDataRouter.patchRoutes(\n            rendered.parentId ?? null,\n            [createRouteFromServerManifest(rendered)],\n            true\n          );\n        }\n      }\n    }\n    return results;\n  });\n}\nfunction getFetchAndDecodeViaRSC(createFromReadableStream, fetchImplementation) {\n  return async (args, basename, targetRoutes) => {\n    let { request, context } = args;\n    let url = singleFetchUrl(request.url, basename, \"rsc\");\n    if (request.method === \"GET\") {\n      url = stripIndexParam(url);\n      if (targetRoutes) {\n        url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n      }\n    }\n    let res = await fetchImplementation(\n      new Request(url, await createRequestInit(request))\n    );\n    if (res.status >= 400 && !res.headers.has(\"X-Remix-Response\")) {\n      throw new ErrorResponseImpl(res.status, res.statusText, await res.text());\n    }\n    invariant(res.body, \"No response body to decode\");\n    try {\n      const payload = await createFromReadableStream(res.body, {\n        temporaryReferences: void 0\n      });\n      if (payload.type === \"redirect\") {\n        return {\n          status: res.status,\n          data: {\n            redirect: {\n              redirect: payload.location,\n              reload: payload.reload,\n              replace: payload.replace,\n              revalidate: false,\n              status: payload.status\n            }\n          }\n        };\n      }\n      if (payload.type !== \"render\") {\n        throw new Error(\"Unexpected payload type\");\n      }\n      context.get(renderedRoutesContext).push(...payload.matches);\n      let results = { routes: {} };\n      const dataKey = isMutationMethod(request.method) ? \"actionData\" : \"loaderData\";\n      for (let [routeId, data] of Object.entries(payload[dataKey] || {})) {\n        results.routes[routeId] = { data };\n      }\n      if (payload.errors) {\n        for (let [routeId, error] of Object.entries(payload.errors)) {\n          results.routes[routeId] = { error };\n        }\n      }\n      return { status: res.status, data: results };\n    } catch (e) {\n      throw new Error(\"Unable to decode RSC response\");\n    }\n  };\n}\nfunction RSCHydratedRouter({\n  createFromReadableStream,\n  fetch: fetchImplementation = fetch,\n  payload,\n  routeDiscovery = \"eager\",\n  getContext\n}) {\n  if (payload.type !== \"render\") throw new Error(\"Invalid payload type\");\n  let { router: router2, routeModules } = React3.useMemo(\n    () => createRouterFromPayload({\n      payload,\n      fetchImplementation,\n      getContext,\n      createFromReadableStream\n    }),\n    [createFromReadableStream, payload, fetchImplementation, getContext]\n  );\n  React3.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  React3.useLayoutEffect(() => {\n    const globalVar = window;\n    if (!globalVar.__routerInitialized) {\n      globalVar.__routerInitialized = true;\n      globalVar.__reactRouterDataRouter.initialize();\n    }\n  }, []);\n  let [location2, setLocation] = React3.useState(router2.state.location);\n  React3.useLayoutEffect(\n    () => router2.subscribe((newState) => {\n      if (newState.location !== location2) {\n        setLocation(newState.location);\n      }\n    }),\n    [router2, location2]\n  );\n  React3.useEffect(() => {\n    if (routeDiscovery === \"lazy\" || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let paths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (paths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          paths,\n          createFromReadableStream,\n          fetchImplementation\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n  }, [routeDiscovery, createFromReadableStream, fetchImplementation]);\n  const frameworkContext = {\n    future: {\n      // These flags have no runtime impact so can always be false.  If we add\n      // flags that drive runtime behavior they'll need to be proxied through.\n      v8_middleware: false,\n      unstable_subResourceIntegrity: false\n    },\n    isSpaMode: false,\n    ssr: true,\n    criticalCss: \"\",\n    manifest: {\n      routes: {},\n      version: \"1\",\n      url: \"\",\n      entry: {\n        module: \"\",\n        imports: []\n      }\n    },\n    routeDiscovery: { mode: \"lazy\", manifestPath: \"/__manifest\" },\n    routeModules\n  };\n  return /* @__PURE__ */ React3.createElement(RSCRouterContext.Provider, { value: true }, /* @__PURE__ */ React3.createElement(RSCRouterGlobalErrorBoundary, { location: location2 }, /* @__PURE__ */ React3.createElement(FrameworkContext.Provider, { value: frameworkContext }, /* @__PURE__ */ React3.createElement(UNSTABLE_TransitionEnabledRouterProvider, { router: router2, flushSync: ReactDOM2.flushSync }))));\n}\nfunction createRouteFromServerManifest(match, payload) {\n  let hasInitialData = payload && match.id in payload.loaderData;\n  let initialData = payload?.loaderData[match.id];\n  let hasInitialError = payload?.errors && match.id in payload.errors;\n  let initialError = payload?.errors?.[match.id];\n  let isHydrationRequest = match.clientLoader?.hydrate === true || !match.hasLoader || // If the route has a component but we don't have an element, we need to hit\n  // the server loader flow regardless of whether the client loader calls\n  // `serverLoader` or not, otherwise we'll have nothing to render.\n  match.hasComponent && !match.element;\n  invariant(window.__reactRouterRouteModules);\n  populateRSCRouteModules(window.__reactRouterRouteModules, match);\n  let dataRoute = {\n    id: match.id,\n    element: match.element,\n    errorElement: match.errorElement,\n    handle: match.handle,\n    hasErrorBoundary: match.hasErrorBoundary,\n    hydrateFallbackElement: match.hydrateFallbackElement,\n    index: match.index,\n    loader: match.clientLoader ? async (args, singleFetch) => {\n      try {\n        let result = await match.clientLoader({\n          ...args,\n          serverLoader: () => {\n            preventInvalidServerHandlerCall(\n              \"loader\",\n              match.id,\n              match.hasLoader\n            );\n            if (isHydrationRequest) {\n              if (hasInitialData) {\n                return initialData;\n              }\n              if (hasInitialError) {\n                throw initialError;\n              }\n            }\n            return callSingleFetch(singleFetch);\n          }\n        });\n        return result;\n      } finally {\n        isHydrationRequest = false;\n      }\n    } : (\n      // We always make the call in this RSC world since even if we don't\n      // have a `loader` we may need to get the `element` implementation\n      (_, singleFetch) => callSingleFetch(singleFetch)\n    ),\n    action: match.clientAction ? (args, singleFetch) => match.clientAction({\n      ...args,\n      serverAction: async () => {\n        preventInvalidServerHandlerCall(\n          \"action\",\n          match.id,\n          match.hasLoader\n        );\n        return await callSingleFetch(singleFetch);\n      }\n    }) : match.hasAction ? (_, singleFetch) => callSingleFetch(singleFetch) : () => {\n      throw noActionDefinedError(\"action\", match.id);\n    },\n    path: match.path,\n    shouldRevalidate: match.shouldRevalidate,\n    // We always have a \"loader\" in this RSC world since even if we don't\n    // have a `loader` we may need to get the `element` implementation\n    hasLoader: true,\n    hasClientLoader: match.clientLoader != null,\n    hasAction: match.hasAction,\n    hasClientAction: match.clientAction != null,\n    hasShouldRevalidate: match.shouldRevalidate != null\n  };\n  if (typeof dataRoute.loader === \"function\") {\n    dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n      match.id,\n      match.clientLoader,\n      match.hasLoader,\n      false\n    );\n  }\n  return dataRoute;\n}\nfunction callSingleFetch(singleFetch) {\n  invariant(typeof singleFetch === \"function\", \"Invalid singleFetch parameter\");\n  return singleFetch();\n}\nfunction preventInvalidServerHandlerCall(type, routeId, hasHandler) {\n  if (!hasHandler) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${routeId}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction getManifestUrl(paths) {\n  if (paths.length === 0) {\n    return null;\n  }\n  if (paths.length === 1) {\n    return new URL(`${paths[0]}.manifest`, window.location.origin);\n  }\n  const globalVar = window;\n  let basename = (globalVar.__reactRouterDataRouter.basename ?? \"\").replace(\n    /^\\/|\\/$/g,\n    \"\"\n  );\n  let url = new URL(`${basename}/.manifest`, window.location.origin);\n  url.searchParams.set(\"paths\", paths.sort().join(\",\"));\n  return url;\n}\nasync function fetchAndApplyManifestPatches(paths, createFromReadableStream, fetchImplementation, signal) {\n  let url = getManifestUrl(paths);\n  if (url == null) {\n    return;\n  }\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let response = await fetchImplementation(new Request(url, { signal }));\n  if (!response.body || response.status < 200 || response.status >= 300) {\n    throw new Error(\"Unable to fetch new route matches from the server\");\n  }\n  let payload = await createFromReadableStream(response.body, {\n    temporaryReferences: void 0\n  });\n  if (payload.type !== \"manifest\") {\n    throw new Error(\"Failed to patch routes\");\n  }\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  payload.patches.forEach((p) => {\n    window.__reactRouterDataRouter.patchRoutes(\n      p.parentId ?? null,\n      [createRouteFromServerManifest(p)]\n    );\n  });\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\nfunction isExternalLocation(location2) {\n  const newLocation = new URL(location2, window.location.href);\n  return newLocation.origin !== window.location.origin;\n}\n\n// lib/rsc/html-stream/browser.ts\nfunction getRSCStream() {\n  let encoder = new TextEncoder();\n  let streamController = null;\n  let rscStream = new ReadableStream({\n    start(controller) {\n      if (typeof window === \"undefined\") {\n        return;\n      }\n      let handleChunk = (chunk) => {\n        if (typeof chunk === \"string\") {\n          controller.enqueue(encoder.encode(chunk));\n        } else {\n          controller.enqueue(chunk);\n        }\n      };\n      window.__FLIGHT_DATA || (window.__FLIGHT_DATA = []);\n      window.__FLIGHT_DATA.forEach(handleChunk);\n      window.__FLIGHT_DATA.push = (chunk) => {\n        handleChunk(chunk);\n        return 0;\n      };\n      streamController = controller;\n    }\n  });\n  if (typeof document !== \"undefined\" && document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      streamController?.close();\n    });\n  } else {\n    streamController?.close();\n  }\n  return rscStream;\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider,\n  RSCHydratedRouter as unstable_RSCHydratedRouter,\n  createCallServer as unstable_createCallServer,\n  getRSCStream as unstable_getRSCStream\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}