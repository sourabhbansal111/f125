{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Calendar=()=>{const[allRaces,setAllRaces]=useState([]);const[loading,setLoading]=useState(true);const[activeView,setActiveView]=useState('upcoming');const[selectedYear,setSelectedYear]=useState(2024);const[showModal,setShowModal]=useState(false);const[selectedRace,setSelectedRace]=useState(null);const[raceResults,setRaceResults]=useState(null);const[qualifyingResults,setQualifyingResults]=useState(null);const[loadingDetails,setLoadingDetails]=useState(false);const fetchRaceSchedule=useCallback(async()=>{console.log('🏎️ Loading F1 Calendar from APIs...');// Try multiple APIs in sequence\nconst apis=['https://api.jolpi.ca/ergast/f1/2025.json','http://ergast.com/api/f1/2025.json','https://ergast.com/api/f1/2025.json'];for(const apiUrl of apis){try{console.log(\"\\uD83D\\uDCE1 Trying API: \".concat(apiUrl));const response=await fetch(apiUrl);if(response.ok){var _data$MRData,_data$MRData$RaceTabl;const data=await response.json();const races=(_data$MRData=data.MRData)===null||_data$MRData===void 0?void 0:(_data$MRData$RaceTabl=_data$MRData.RaceTable)===null||_data$MRData$RaceTabl===void 0?void 0:_data$MRData$RaceTabl.Races;if(races&&races.length>0){console.log(\"\\u2705 API Success! \".concat(races.length,\" races loaded from \").concat(apiUrl));setAllRaces(races);setLoading(false);return;}}}catch(error){console.warn(\"\\u26A0\\uFE0F API failed: \".concat(apiUrl),error);}}// All APIs failed\nconsole.error('❌ All APIs failed, no data available');setAllRaces([]);setLoading(false);},[]);const fetchRacesByYear=useCallback(async year=>{console.log(\"\\uD83C\\uDFCE\\uFE0F Loading F1 Calendar for \".concat(year,\"...\"));setLoading(true);// Try multiple APIs in sequence\nconst apis=[\"https://api.jolpi.ca/ergast/f1/\".concat(year,\".json\"),\"http://ergast.com/api/f1/\".concat(year,\".json\"),\"https://ergast.com/api/f1/\".concat(year,\".json\")];for(const apiUrl of apis){try{console.log(\"\\uD83D\\uDCE1 Trying API: \".concat(apiUrl));const response=await fetch(apiUrl);if(response.ok){var _data$MRData2,_data$MRData2$RaceTab;const data=await response.json();const races=(_data$MRData2=data.MRData)===null||_data$MRData2===void 0?void 0:(_data$MRData2$RaceTab=_data$MRData2.RaceTable)===null||_data$MRData2$RaceTab===void 0?void 0:_data$MRData2$RaceTab.Races;if(races&&races.length>0){console.log(\"\\u2705 API Success! \".concat(races.length,\" races loaded for \").concat(year));setAllRaces(races);setLoading(false);return;}}}catch(error){console.warn(\"\\u26A0\\uFE0F API failed: \".concat(apiUrl),error);}}// All APIs failed\nconsole.error(\"\\u274C All APIs failed for year \".concat(year));setAllRaces([]);setLoading(false);},[]);useEffect(()=>{if(activeView==='upcoming'){fetchRaceSchedule();}else if(activeView==='previous'){fetchRacesByYear(selectedYear);}},[selectedYear,activeView,fetchRaceSchedule,fetchRacesByYear]);const loadRaceDetails=async race=>{setLoadingDetails(true);setRaceResults(null);setQualifyingResults(null);const year=race.date.split('-')[0];const round=race.round;const raceDate=new Date(race.date);const now=new Date();const isPastRace=raceDate<now;if(isPastRace){// Fetch race results\ntry{const response=await fetch(\"https://api.jolpi.ca/ergast/f1/\".concat(year,\"/\").concat(round,\"/results.json\"));if(response.ok){var _data$MRData3,_data$MRData3$RaceTab,_data$MRData3$RaceTab2;const data=await response.json();const results=(_data$MRData3=data.MRData)===null||_data$MRData3===void 0?void 0:(_data$MRData3$RaceTab=_data$MRData3.RaceTable)===null||_data$MRData3$RaceTab===void 0?void 0:(_data$MRData3$RaceTab2=_data$MRData3$RaceTab.Races[0])===null||_data$MRData3$RaceTab2===void 0?void 0:_data$MRData3$RaceTab2.Results;if(results){setRaceResults(results);}}}catch(err){console.warn('❌ Could not fetch race results:',err);}// Fetch qualifying results\ntry{const response=await fetch(\"https://api.jolpi.ca/ergast/f1/\".concat(year,\"/\").concat(round,\"/qualifying.json\"));if(response.ok){var _data$MRData4,_data$MRData4$RaceTab,_data$MRData4$RaceTab2;const data=await response.json();const results=(_data$MRData4=data.MRData)===null||_data$MRData4===void 0?void 0:(_data$MRData4$RaceTab=_data$MRData4.RaceTable)===null||_data$MRData4$RaceTab===void 0?void 0:(_data$MRData4$RaceTab2=_data$MRData4$RaceTab.Races[0])===null||_data$MRData4$RaceTab2===void 0?void 0:_data$MRData4$RaceTab2.QualifyingResults;if(results){setQualifyingResults(results);}}}catch(err){console.warn('❌ Could not fetch qualifying results:',err);}}setLoadingDetails(false);};const getCountryFlag=country=>{const flagMap={'Australia':'🇦🇺','China':'🇨🇳','Japan':'🇯🇵','Bahrain':'🇧🇭','Saudi Arabia':'🇸🇦','USA':'🇺🇸','Italy':'🇮🇹','Monaco':'🇲🇨','Spain':'🇪🇸','Canada':'🇨🇦','Austria':'🇦🇹','UK':'🇬🇧','Hungary':'🇭🇺','Belgium':'🇧🇪','Netherlands':'🇳🇱','Azerbaijan':'🇦🇿','Singapore':'🇸🇬','Mexico':'🇲🇽','Brazil':'🇧🇷','Qatar':'🇶🇦','UAE':'🇦🇪'};return flagMap[country]||'🏁';};const formatRaceDate=(dateStr,timeStr)=>{const date=new Date(dateStr+'T'+timeStr);return date.toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'});};const getRacesByView=()=>{const now=new Date();return allRaces.filter(race=>{const raceDate=new Date(race.date);return activeView==='upcoming'?raceDate>=now:raceDate<now;}).sort((a,b)=>{const dateA=new Date(a.date);const dateB=new Date(b.date);return activeView==='upcoming'?dateA.getTime()-dateB.getTime():dateB.getTime()-dateA.getTime();});};const filteredRaces=getRacesByView();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"calendar-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Loading Calendar...\"})]})});}return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"calendar-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-badge\",children:\"SEASON SCHEDULE\"}),/*#__PURE__*/_jsxs(\"h2\",{className:\"section-title\",children:[\"Race Calendar 2025 \",/*#__PURE__*/_jsx(\"span\",{className:\"live-badge\",children:\"\\uD83D\\uDD34 LIVE\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"section-subtitle\",children:\"Complete schedule of all Grand Prix races\"}),/*#__PURE__*/_jsx(\"div\",{className:\"last-updated\",style:{textAlign:'center',color:'var(--gray-400)',fontSize:'0.85rem',marginTop:'0.5rem'},children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u27F3 Updates automatically every 10 minutes\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-toggle\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-btn \".concat(activeView==='upcoming'?'active':''),onClick:()=>setActiveView('upcoming'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"toggle-icon\",children:\"\\uD83D\\uDD2E\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Upcoming Races\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-btn \".concat(activeView==='previous'?'active':''),onClick:()=>setActiveView('previous'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"toggle-icon\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Previous Races\"})]})]}),activeView==='previous'&&/*#__PURE__*/_jsxs(\"div\",{className:\"year-selector\",style:{display:'block'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"year-selector-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"year-label\",children:\"\\uD83D\\uDCC5 Select Season\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-slider-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"year-nav-btn\",onClick:()=>setSelectedYear(Math.max(1950,selectedYear-1)),children:\"\\u25C0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"year-display\",children:/*#__PURE__*/_jsx(\"span\",{className:\"year-value\",children:selectedYear})}),/*#__PURE__*/_jsx(\"button\",{className:\"year-nav-btn\",onClick:()=>setSelectedYear(Math.min(2024,selectedYear+1)),children:\"\\u25B6\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"year-slider\",min:\"1950\",max:\"2024\",value:selectedYear,step:\"1\",onChange:e=>setSelectedYear(parseInt(e.target.value))}),/*#__PURE__*/_jsxs(\"div\",{className:\"year-range-labels\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"1950\"}),/*#__PURE__*/_jsx(\"span\",{children:\"2024\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"races-grid\",children:filteredRaces.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-races\",children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'3rem',marginBottom:'1rem'},children:activeView==='upcoming'?'🏁':'📜'}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"No \",activeView==='upcoming'?'Upcoming':'Previous',\" Races\"]}),/*#__PURE__*/_jsx(\"p\",{children:activeView==='upcoming'?'The season calendar will be announced soon!':'The season hasn\\'t started yet!'})]}):filteredRaces.map((race,index)=>{const isNext=activeView==='upcoming'&&index===0;const isRecent=activeView==='previous'&&index===0;return/*#__PURE__*/_jsxs(\"div\",{className:\"race-card \".concat(isNext?'race-next':'',\" \").concat(activeView==='previous'?'race-past':'',\" \").concat(isRecent?'race-recent':''),onClick:()=>{setSelectedRace(race);setShowModal(true);loadRaceDetails(race);},style:{cursor:'pointer'},children:[isNext&&/*#__PURE__*/_jsx(\"div\",{className:\"next-badge\",children:\"\\u26A1 NEXT RACE\"}),isRecent&&/*#__PURE__*/_jsx(\"div\",{className:\"past-badge\",children:\"\\u2713 LATEST RACE\"}),activeView==='previous'&&!isRecent&&/*#__PURE__*/_jsx(\"div\",{className:\"past-badge\",children:\"\\u2713 COMPLETED\"}),/*#__PURE__*/_jsx(\"div\",{className:\"race-flag\",children:getCountryFlag(race.Circuit.Location.country)}),/*#__PURE__*/_jsxs(\"div\",{className:\"race-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"race-round\",children:[\"ROUND \",race.round]}),/*#__PURE__*/_jsx(\"h3\",{children:race.raceName}),/*#__PURE__*/_jsx(\"p\",{className:\"race-circuit\",children:race.Circuit.circuitName}),/*#__PURE__*/_jsxs(\"div\",{className:\"race-date\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"date-icon\",children:\"\\uD83D\\uDCC5\"}),/*#__PURE__*/_jsx(\"span\",{children:formatRaceDate(race.date,race.time)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"race-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item-small\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Location\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:race.Circuit.Location.locality})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item-small\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Round\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[race.round,\"/\",allRaces.length]})]})]})]})]},race.round);})})]}),showModal&&selectedRace&&/*#__PURE__*/_jsxs(\"div\",{className:\"race-modal active\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowModal(false)}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowModal(false),children:\"\\u2715\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-flag\",children:getCountryFlag(selectedRace.Circuit.Location.country)}),/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:selectedRace.raceName}),/*#__PURE__*/_jsx(\"p\",{className:\"modal-subtitle\",children:selectedRace.Circuit.circuitName}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-date\",children:formatRaceDate(selectedRace.date,selectedRace.time)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:loadingDetails?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'3rem'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",style:{margin:'0 auto 1rem'}}),/*#__PURE__*/_jsx(\"p\",{style:{color:'var(--gray-400)'},children:\"Loading race data...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-section-title\",children:\"\\uD83D\\uDCCD Circuit Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-label\",children:\"Circuit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-value\",children:selectedRace.Circuit.circuitName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-label\",children:\"Location\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-value\",children:[selectedRace.Circuit.Location.locality,\", \",selectedRace.Circuit.Location.country]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-label\",children:\"Round\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-value\",children:[selectedRace.round,\" / 24\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-info-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-label\",children:\"Date\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-info-value\",children:new Date(selectedRace.date).toLocaleDateString('en-US',{month:'long',day:'numeric',year:'numeric'})})]})]})]}),raceResults&&raceResults.length>=3&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-section-title\",children:\"\\uD83C\\uDFC6 Podium\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"podium-display\",children:[raceResults[1]&&/*#__PURE__*/_jsxs(\"div\",{className:\"podium-item podium-second\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"podium-medal\",children:\"\\uD83E\\uDD48\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-position\",children:\"P2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-driver\",children:raceResults[1].Driver.familyName}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-team\",children:raceResults[1].Constructor.name}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-stand second\",children:\"2\"})]}),raceResults[0]&&/*#__PURE__*/_jsxs(\"div\",{className:\"podium-item podium-first\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"podium-medal\",children:\"\\uD83E\\uDD47\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-position\",children:\"P1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-driver\",children:raceResults[0].Driver.familyName}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-team\",children:raceResults[0].Constructor.name}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-stand first\",children:\"1\"})]}),raceResults[2]&&/*#__PURE__*/_jsxs(\"div\",{className:\"podium-item podium-third\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"podium-medal\",children:\"\\uD83E\\uDD49\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-position\",children:\"P3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-driver\",children:raceResults[2].Driver.familyName}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-team\",children:raceResults[2].Constructor.name}),/*#__PURE__*/_jsx(\"div\",{className:\"podium-stand third\",children:\"3\"})]})]})]}),raceResults&&raceResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-section-title\",children:\"\\uD83D\\uDCCA Full Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-results-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-result-row header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-position\",children:\"POS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-driver\",children:\"DRIVER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-points\",children:\"TIME/STATUS\"})]}),raceResults.slice(0,10).map(result=>{var _result$FastestLap,_result$Time;const positionClass=result.position<=3?\"podium-\".concat(result.position):'';const positionNum=parseInt(result.position);let medal='';if(positionNum===1)medal='🥇';else if(positionNum===2)medal='🥈';else if(positionNum===3)medal='🥉';const hasFastestLap=((_result$FastestLap=result.FastestLap)===null||_result$FastestLap===void 0?void 0:_result$FastestLap.rank)==='1';return/*#__PURE__*/_jsxs(\"div\",{className:\"modal-result-row \".concat(positionClass),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-position\",children:[medal&&/*#__PURE__*/_jsx(\"span\",{className:\"position-medal\",children:medal}),result.position]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-driver\",children:[result.Driver.givenName,\" \",result.Driver.familyName]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-team\",children:[/*#__PURE__*/_jsx(\"span\",{children:result.Constructor.name}),result.points>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"team-badge\",children:[result.points,\" PTS\"]})]}),hasFastestLap&&/*#__PURE__*/_jsxs(\"div\",{className:\"fastest-lap\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fastest-lap-icon\",children:\"\\u26A1\"}),\"Fastest Lap\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-points\",children:((_result$Time=result.Time)===null||_result$Time===void 0?void 0:_result$Time.time)||result.status})]},result.position);})]})]}),qualifyingResults&&qualifyingResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-section-title\",children:\"\\u23F1\\uFE0F Qualifying Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-results-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-result-row header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-position\",children:\"POS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-driver\",children:\"DRIVER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-points\",children:\"BEST TIME\"})]}),qualifyingResults.slice(0,10).map((result,index)=>{const positionClass=result.position<=3?\"podium-\".concat(result.position):'';let medal='';if(index===0)medal='🥇';else if(index===1)medal='🥈';else if(index===2)medal='🥉';return/*#__PURE__*/_jsxs(\"div\",{className:\"modal-result-row \".concat(positionClass),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-position\",children:[medal&&/*#__PURE__*/_jsx(\"span\",{className:\"position-medal\",children:medal}),result.position]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-driver\",children:[result.Driver.givenName,\" \",result.Driver.familyName]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-team\",children:result.Constructor.name})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-points\",children:result.Q3||result.Q2||result.Q1||'-'})]},result.position);})]})]})]})})]})]})]});};export default Calendar;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Calendar","allRaces","setAllRaces","loading","setLoading","activeView","setActiveView","selectedYear","setSelectedYear","showModal","setShowModal","selectedRace","setSelectedRace","raceResults","setRaceResults","qualifyingResults","setQualifyingResults","loadingDetails","setLoadingDetails","fetchRaceSchedule","console","log","apis","apiUrl","concat","response","fetch","ok","_data$MRData","_data$MRData$RaceTabl","data","json","races","MRData","RaceTable","Races","length","error","warn","fetchRacesByYear","year","_data$MRData2","_data$MRData2$RaceTab","loadRaceDetails","race","date","split","round","raceDate","Date","now","isPastRace","_data$MRData3","_data$MRData3$RaceTab","_data$MRData3$RaceTab2","results","Results","err","_data$MRData4","_data$MRData4$RaceTab","_data$MRData4$RaceTab2","QualifyingResults","getCountryFlag","country","flagMap","formatRaceDate","dateStr","timeStr","toLocaleDateString","month","day","getRacesByView","filter","sort","a","b","dateA","dateB","getTime","filteredRaces","className","children","style","textAlign","color","fontSize","marginTop","onClick","display","Math","max","min","type","value","step","onChange","e","parseInt","target","marginBottom","map","index","isNext","isRecent","cursor","Circuit","Location","raceName","circuitName","time","locality","padding","margin","Driver","familyName","Constructor","name","slice","result","_result$FastestLap","_result$Time","positionClass","position","positionNum","medal","hasFastestLap","FastestLap","rank","givenName","points","Time","status","Q3","Q2","Q1"],"sources":["D:/F1Demo (2)/NewProject/f1-pitwall-react/src/pages/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\ninterface Circuit {\n  circuitName: string;\n  Location: {\n    locality: string;\n    country: string;\n  };\n}\n\ninterface Race {\n  round: string;\n  raceName: string;\n  date: string;\n  time: string;\n  Circuit: Circuit;\n}\n\nconst Calendar: React.FC = () => {\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [activeView, setActiveView] = useState<'upcoming' | 'previous'>('upcoming');\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [selectedRace, setSelectedRace] = useState<Race | null>(null);\n  const [raceResults, setRaceResults] = useState<any>(null);\n  const [qualifyingResults, setQualifyingResults] = useState<any>(null);\n  const [loadingDetails, setLoadingDetails] = useState<boolean>(false);\n\n  const fetchRaceSchedule = useCallback(async () => {\n    console.log('🏎️ Loading F1 Calendar from APIs...');\n    \n    // Try multiple APIs in sequence\n    const apis = [\n      'https://api.jolpi.ca/ergast/f1/2025.json',\n      'http://ergast.com/api/f1/2025.json',\n      'https://ergast.com/api/f1/2025.json'\n    ];\n    \n    for (const apiUrl of apis) {\n      try {\n        console.log(`📡 Trying API: ${apiUrl}`);\n        const response = await fetch(apiUrl);\n        if (response.ok) {\n          const data = await response.json();\n          const races = data.MRData?.RaceTable?.Races;\n          if (races && races.length > 0) {\n            console.log(`✅ API Success! ${races.length} races loaded from ${apiUrl}`);\n            setAllRaces(races);\n            setLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\n      }\n    }\n    \n    // All APIs failed\n    console.error('❌ All APIs failed, no data available');\n    setAllRaces([]);\n    setLoading(false);\n  }, []);\n\n  const fetchRacesByYear = useCallback(async (year: number) => {\n    console.log(`🏎️ Loading F1 Calendar for ${year}...`);\n    setLoading(true);\n    \n    // Try multiple APIs in sequence\n    const apis = [\n      `https://api.jolpi.ca/ergast/f1/${year}.json`,\n      `http://ergast.com/api/f1/${year}.json`,\n      `https://ergast.com/api/f1/${year}.json`\n    ];\n    \n    for (const apiUrl of apis) {\n      try {\n        console.log(`📡 Trying API: ${apiUrl}`);\n        const response = await fetch(apiUrl);\n        if (response.ok) {\n          const data = await response.json();\n          const races = data.MRData?.RaceTable?.Races;\n          if (races && races.length > 0) {\n            console.log(`✅ API Success! ${races.length} races loaded for ${year}`);\n            setAllRaces(races);\n            setLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\n      }\n    }\n    \n    // All APIs failed\n    console.error(`❌ All APIs failed for year ${year}`);\n    setAllRaces([]);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (activeView === 'upcoming') {\n      fetchRaceSchedule();\n    } else if (activeView === 'previous') {\n      fetchRacesByYear(selectedYear);\n    }\n  }, [selectedYear, activeView, fetchRaceSchedule, fetchRacesByYear]);\n\n  const loadRaceDetails = async (race: Race) => {\n    setLoadingDetails(true);\n    setRaceResults(null);\n    setQualifyingResults(null);\n\n    const year = race.date.split('-')[0];\n    const round = race.round;\n    const raceDate = new Date(race.date);\n    const now = new Date();\n    const isPastRace = raceDate < now;\n\n    if (isPastRace) {\n      // Fetch race results\n      try {\n        const response = await fetch(`https://api.jolpi.ca/ergast/f1/${year}/${round}/results.json`);\n        if (response.ok) {\n          const data = await response.json();\n          const results = data.MRData?.RaceTable?.Races[0]?.Results;\n          if (results) {\n            setRaceResults(results);\n          }\n        }\n      } catch (err) {\n        console.warn('❌ Could not fetch race results:', err);\n      }\n\n      // Fetch qualifying results\n      try {\n        const response = await fetch(`https://api.jolpi.ca/ergast/f1/${year}/${round}/qualifying.json`);\n        if (response.ok) {\n          const data = await response.json();\n          const results = data.MRData?.RaceTable?.Races[0]?.QualifyingResults;\n          if (results) {\n            setQualifyingResults(results);\n          }\n        }\n      } catch (err) {\n        console.warn('❌ Could not fetch qualifying results:', err);\n      }\n    }\n\n    setLoadingDetails(false);\n  };\n\n  const getCountryFlag = (country: string): string => {\n    const flagMap: { [key: string]: string } = {\n      'Australia': '🇦🇺', 'China': '🇨🇳', 'Japan': '🇯🇵', 'Bahrain': '🇧🇭',\n      'Saudi Arabia': '🇸🇦', 'USA': '🇺🇸', 'Italy': '🇮🇹', 'Monaco': '🇲🇨',\n      'Spain': '🇪🇸', 'Canada': '🇨🇦', 'Austria': '🇦🇹', 'UK': '🇬🇧',\n      'Hungary': '🇭🇺', 'Belgium': '🇧🇪', 'Netherlands': '🇳🇱', 'Azerbaijan': '🇦🇿',\n      'Singapore': '🇸🇬', 'Mexico': '🇲🇽', 'Brazil': '🇧🇷', 'Qatar': '🇶🇦',\n      'UAE': '🇦🇪'\n    };\n    return flagMap[country] || '🏁';\n  };\n\n  const formatRaceDate = (dateStr: string, timeStr: string): string => {\n    const date = new Date(dateStr + 'T' + timeStr);\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric', \n      year: 'numeric' \n    });\n  };\n\n  const getRacesByView = () => {\n    const now = new Date();\n    return allRaces.filter(race => {\n      const raceDate = new Date(race.date);\n      return activeView === 'upcoming' ? raceDate >= now : raceDate < now;\n    }).sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      return activeView === 'upcoming' \n        ? dateA.getTime() - dateB.getTime()\n        : dateB.getTime() - dateA.getTime();\n    });\n  };\n\n  const filteredRaces = getRacesByView();\n\n  if (loading) {\n    return (\n      <div className=\"calendar-page\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <h2>Loading Calendar...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <main>\n      <section className=\"calendar-section\">\n        <div className=\"section-header\">\n          <div className=\"section-badge\">SEASON SCHEDULE</div>\n          <h2 className=\"section-title\">Race Calendar 2025 <span className=\"live-badge\">🔴 LIVE</span></h2>\n          <p className=\"section-subtitle\">Complete schedule of all Grand Prix races</p>\n          <div className=\"last-updated\" style={{ textAlign: 'center', color: 'var(--gray-400)', fontSize: '0.85rem', marginTop: '0.5rem' }}>\n            <span>⟳ Updates automatically every 10 minutes</span>\n          </div>\n          \n          <div className=\"calendar-toggle\">\n            <button \n              className={`toggle-btn ${activeView === 'upcoming' ? 'active' : ''}`}\n              onClick={() => setActiveView('upcoming')}\n            >\n              <span className=\"toggle-icon\">🔮</span>\n              <span>Upcoming Races</span>\n            </button>\n            <button \n              className={`toggle-btn ${activeView === 'previous' ? 'active' : ''}`}\n              onClick={() => setActiveView('previous')}\n            >\n              <span className=\"toggle-icon\">✓</span>\n              <span>Previous Races</span>\n            </button>\n          </div>\n          \n          {activeView === 'previous' && (\n            <div className=\"year-selector\" style={{ display: 'block' }}>\n              <div className=\"year-selector-header\">\n                <span className=\"year-label\">📅 Select Season</span>\n              </div>\n              <div className=\"year-slider-container\">\n                <button \n                  className=\"year-nav-btn\" \n                  onClick={() => setSelectedYear(Math.max(1950, selectedYear - 1))}\n                >\n                  ◀\n                </button>\n                <div className=\"year-display\">\n                  <span className=\"year-value\">{selectedYear}</span>\n                </div>\n                <button \n                  className=\"year-nav-btn\" \n                  onClick={() => setSelectedYear(Math.min(2024, selectedYear + 1))}\n                >\n                  ▶\n                </button>\n              </div>\n              <input \n                type=\"range\" \n                className=\"year-slider\" \n                min=\"1950\" \n                max=\"2024\" \n                value={selectedYear} \n                step=\"1\"\n                onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n              />\n              <div className=\"year-range-labels\">\n                <span>1950</span>\n                <span>2024</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"races-grid\">\n          {filteredRaces.length === 0 ? (\n            <div className=\"no-races\">\n              <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\n                {activeView === 'upcoming' ? '🏁' : '📜'}\n              </div>\n              <h3>No {activeView === 'upcoming' ? 'Upcoming' : 'Previous'} Races</h3>\n              <p>\n                {activeView === 'upcoming' \n                  ? 'The season calendar will be announced soon!' \n                  : 'The season hasn\\'t started yet!'}\n              </p>\n            </div>\n          ) : (\n            filteredRaces.map((race, index) => {\n              const isNext = activeView === 'upcoming' && index === 0;\n              const isRecent = activeView === 'previous' && index === 0;\n\n              return (\n                <div \n                  key={race.round} \n                  className={`race-card ${isNext ? 'race-next' : ''} ${activeView === 'previous' ? 'race-past' : ''} ${isRecent ? 'race-recent' : ''}`}\n                  onClick={() => {\n                    setSelectedRace(race);\n                    setShowModal(true);\n                    loadRaceDetails(race);\n                  }}\n                  style={{ cursor: 'pointer' }}\n                >\n                  {isNext && <div className=\"next-badge\">⚡ NEXT RACE</div>}\n                  {isRecent && <div className=\"past-badge\">✓ LATEST RACE</div>}\n                  {activeView === 'previous' && !isRecent && <div className=\"past-badge\">✓ COMPLETED</div>}\n                  \n                  <div className=\"race-flag\">{getCountryFlag(race.Circuit.Location.country)}</div>\n                  <div className=\"race-info\">\n                    <div className=\"race-round\">ROUND {race.round}</div>\n                    <h3>{race.raceName}</h3>\n                    <p className=\"race-circuit\">{race.Circuit.circuitName}</p>\n                    <div className=\"race-date\">\n                      <span className=\"date-icon\">📅</span>\n                      <span>{formatRaceDate(race.date, race.time)}</span>\n                    </div>\n                    <div className=\"race-stats\">\n                      <div className=\"stat-item-small\">\n                        <span className=\"label\">Location</span>\n                        <span className=\"value\">{race.Circuit.Location.locality}</span>\n                      </div>\n                      <div className=\"stat-item-small\">\n                        <span className=\"label\">Round</span>\n                        <span className=\"value\">{race.round}/{allRaces.length}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </section>\n\n      {/* Race Details Modal */}\n      {showModal && selectedRace && (\n        <div className=\"race-modal active\">\n          <div className=\"modal-overlay\" onClick={() => setShowModal(false)}></div>\n          <div className=\"modal-content\">\n            <button className=\"modal-close\" onClick={() => setShowModal(false)}>✕</button>\n            <div className=\"modal-header\">\n              <div className=\"modal-flag\">{getCountryFlag(selectedRace.Circuit.Location.country)}</div>\n              <h2 className=\"modal-title\">{selectedRace.raceName}</h2>\n              <p className=\"modal-subtitle\">{selectedRace.Circuit.circuitName}</p>\n              <div className=\"modal-date\">\n                {formatRaceDate(selectedRace.date, selectedRace.time)}\n              </div>\n            </div>\n            <div className=\"modal-body\">\n              {loadingDetails ? (\n                <div style={{ textAlign: 'center', padding: '3rem' }}>\n                  <div className=\"loading-spinner\" style={{ margin: '0 auto 1rem' }}></div>\n                  <p style={{ color: 'var(--gray-400)' }}>Loading race data...</p>\n                </div>\n              ) : (\n                <>\n                  {/* Circuit Information */}\n                  <div className=\"modal-section\">\n                    <h3 className=\"modal-section-title\">📍 Circuit Information</h3>\n                    <div className=\"modal-info-grid\">\n                      <div className=\"modal-info-item\">\n                        <div className=\"modal-info-label\">Circuit</div>\n                        <div className=\"modal-info-value\">{selectedRace.Circuit.circuitName}</div>\n                      </div>\n                      <div className=\"modal-info-item\">\n                        <div className=\"modal-info-label\">Location</div>\n                        <div className=\"modal-info-value\">\n                          {selectedRace.Circuit.Location.locality}, {selectedRace.Circuit.Location.country}\n                        </div>\n                      </div>\n                      <div className=\"modal-info-item\">\n                        <div className=\"modal-info-label\">Round</div>\n                        <div className=\"modal-info-value\">{selectedRace.round} / 24</div>\n                      </div>\n                      <div className=\"modal-info-item\">\n                        <div className=\"modal-info-label\">Date</div>\n                        <div className=\"modal-info-value\">\n                          {new Date(selectedRace.date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Podium Section */}\n                  {raceResults && raceResults.length >= 3 && (\n                    <div className=\"modal-section\">\n                      <h3 className=\"modal-section-title\">🏆 Podium</h3>\n                      <div className=\"podium-display\">\n                        {raceResults[1] && (\n                          <div className=\"podium-item podium-second\">\n                            <div className=\"podium-medal\">🥈</div>\n                            <div className=\"podium-position\">P2</div>\n                            <div className=\"podium-driver\">{raceResults[1].Driver.familyName}</div>\n                            <div className=\"podium-team\">{raceResults[1].Constructor.name}</div>\n                            <div className=\"podium-stand second\">2</div>\n                          </div>\n                        )}\n                        {raceResults[0] && (\n                          <div className=\"podium-item podium-first\">\n                            <div className=\"podium-medal\">🥇</div>\n                            <div className=\"podium-position\">P1</div>\n                            <div className=\"podium-driver\">{raceResults[0].Driver.familyName}</div>\n                            <div className=\"podium-team\">{raceResults[0].Constructor.name}</div>\n                            <div className=\"podium-stand first\">1</div>\n                          </div>\n                        )}\n                        {raceResults[2] && (\n                          <div className=\"podium-item podium-third\">\n                            <div className=\"podium-medal\">🥉</div>\n                            <div className=\"podium-position\">P3</div>\n                            <div className=\"podium-driver\">{raceResults[2].Driver.familyName}</div>\n                            <div className=\"podium-team\">{raceResults[2].Constructor.name}</div>\n                            <div className=\"podium-stand third\">3</div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Full Results Section */}\n                  {raceResults && raceResults.length > 0 && (\n                    <div className=\"modal-section\">\n                      <h3 className=\"modal-section-title\">📊 Full Results</h3>\n                      <div className=\"modal-results-table\">\n                        <div className=\"modal-result-row header\">\n                          <div className=\"modal-position\">POS</div>\n                          <div className=\"modal-driver\">DRIVER</div>\n                          <div className=\"modal-points\">TIME/STATUS</div>\n                        </div>\n                        {raceResults.slice(0, 10).map((result: any) => {\n                          const positionClass = result.position <= 3 ? `podium-${result.position}` : '';\n                          const positionNum = parseInt(result.position);\n                          let medal = '';\n                          if (positionNum === 1) medal = '🥇';\n                          else if (positionNum === 2) medal = '🥈';\n                          else if (positionNum === 3) medal = '🥉';\n                          const hasFastestLap = result.FastestLap?.rank === '1';\n\n                          return (\n                            <div key={result.position} className={`modal-result-row ${positionClass}`}>\n                              <div className=\"modal-position\">\n                                {medal && <span className=\"position-medal\">{medal}</span>}\n                                {result.position}\n                              </div>\n                              <div>\n                                <div className=\"modal-driver\">\n                                  {result.Driver.givenName} {result.Driver.familyName}\n                                </div>\n                                <div className=\"modal-team\">\n                                  <span>{result.Constructor.name}</span>\n                                  {result.points > 0 && <span className=\"team-badge\">{result.points} PTS</span>}\n                                </div>\n                                {hasFastestLap && (\n                                  <div className=\"fastest-lap\">\n                                    <span className=\"fastest-lap-icon\">⚡</span>Fastest Lap\n                                  </div>\n                                )}\n                              </div>\n                              <div className=\"modal-points\">{result.Time?.time || result.status}</div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Qualifying Results Section */}\n                  {qualifyingResults && qualifyingResults.length > 0 && (\n                    <div className=\"modal-section\">\n                      <h3 className=\"modal-section-title\">⏱️ Qualifying Results</h3>\n                      <div className=\"modal-results-table\">\n                        <div className=\"modal-result-row header\">\n                          <div className=\"modal-position\">POS</div>\n                          <div className=\"modal-driver\">DRIVER</div>\n                          <div className=\"modal-points\">BEST TIME</div>\n                        </div>\n                        {qualifyingResults.slice(0, 10).map((result: any, index: number) => {\n                          const positionClass = result.position <= 3 ? `podium-${result.position}` : '';\n                          let medal = '';\n                          if (index === 0) medal = '🥇';\n                          else if (index === 1) medal = '🥈';\n                          else if (index === 2) medal = '🥉';\n\n                          return (\n                            <div key={result.position} className={`modal-result-row ${positionClass}`}>\n                              <div className=\"modal-position\">\n                                {medal && <span className=\"position-medal\">{medal}</span>}\n                                {result.position}\n                              </div>\n                              <div>\n                                <div className=\"modal-driver\">\n                                  {result.Driver.givenName} {result.Driver.familyName}\n                                </div>\n                                <div className=\"modal-team\">{result.Constructor.name}</div>\n                              </div>\n                              <div className=\"modal-points\">{result.Q3 || result.Q2 || result.Q1 || '-'}</div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Calendar;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}