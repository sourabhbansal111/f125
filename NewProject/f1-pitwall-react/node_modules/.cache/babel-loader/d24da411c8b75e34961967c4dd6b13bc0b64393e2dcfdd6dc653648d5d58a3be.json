{"ast":null,"code":"var _jsxFileName = \"D:\\\\F1Demo (2)\\\\NewProject\\\\f1-pitwall-react\\\\src\\\\pages\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [allRaces, setAllRaces] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeView, setActiveView] = useState('upcoming');\n  const [selectedYear, setSelectedYear] = useState(2024);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedRace, setSelectedRace] = useState(null);\n  useEffect(() => {\n    fetchRaceSchedule();\n  }, []);\n  useEffect(() => {\n    if (activeView === 'previous') {\n      fetchRacesByYear(selectedYear);\n    }\n  }, [selectedYear, activeView]);\n  const fetchRaceSchedule = async () => {\n    console.log('🏎️ Loading F1 Calendar from APIs...');\n\n    // Try multiple APIs in sequence\n    const apis = ['https://api.jolpi.ca/ergast/f1/2025.json', 'http://ergast.com/api/f1/2025.json', 'https://ergast.com/api/f1/2025.json'];\n    for (const apiUrl of apis) {\n      try {\n        console.log(`📡 Trying API: ${apiUrl}`);\n        const response = await fetch(apiUrl);\n        if (response.ok) {\n          var _data$MRData, _data$MRData$RaceTabl;\n          const data = await response.json();\n          const races = (_data$MRData = data.MRData) === null || _data$MRData === void 0 ? void 0 : (_data$MRData$RaceTabl = _data$MRData.RaceTable) === null || _data$MRData$RaceTabl === void 0 ? void 0 : _data$MRData$RaceTabl.Races;\n          if (races && races.length > 0) {\n            console.log(`✅ API Success! ${races.length} races loaded from ${apiUrl}`);\n            setAllRaces(races);\n            setLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\n      }\n    }\n\n    // All APIs failed\n    console.error('❌ All APIs failed, no data available');\n    setAllRaces([]);\n    setLoading(false);\n  };\n  const fetchRacesByYear = async year => {\n    console.log(`🏎️ Loading F1 Calendar for ${year}...`);\n    setLoading(true);\n\n    // Try multiple APIs in sequence\n    const apis = [`https://api.jolpi.ca/ergast/f1/${year}.json`, `http://ergast.com/api/f1/${year}.json`, `https://ergast.com/api/f1/${year}.json`];\n    for (const apiUrl of apis) {\n      try {\n        console.log(`📡 Trying API: ${apiUrl}`);\n        const response = await fetch(apiUrl);\n        if (response.ok) {\n          var _data$MRData2, _data$MRData2$RaceTab;\n          const data = await response.json();\n          const races = (_data$MRData2 = data.MRData) === null || _data$MRData2 === void 0 ? void 0 : (_data$MRData2$RaceTab = _data$MRData2.RaceTable) === null || _data$MRData2$RaceTab === void 0 ? void 0 : _data$MRData2$RaceTab.Races;\n          if (races && races.length > 0) {\n            console.log(`✅ API Success! ${races.length} races loaded for ${year}`);\n            setAllRaces(races);\n            setLoading(false);\n            return;\n          }\n        }\n      } catch (error) {\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\n      }\n    }\n\n    // All APIs failed\n    console.error(`❌ All APIs failed for year ${year}`);\n    setAllRaces([]);\n    setLoading(false);\n  };\n  const getCountryFlag = country => {\n    const flagMap = {\n      'Australia': '🇦🇺',\n      'China': '🇨🇳',\n      'Japan': '🇯🇵',\n      'Bahrain': '🇧🇭',\n      'Saudi Arabia': '🇸🇦',\n      'USA': '🇺🇸',\n      'Italy': '🇮🇹',\n      'Monaco': '🇲🇨',\n      'Spain': '🇪🇸',\n      'Canada': '🇨🇦',\n      'Austria': '🇦🇹',\n      'UK': '🇬🇧',\n      'Hungary': '🇭🇺',\n      'Belgium': '🇧🇪',\n      'Netherlands': '🇳🇱',\n      'Azerbaijan': '🇦🇿',\n      'Singapore': '🇸🇬',\n      'Mexico': '🇲🇽',\n      'Brazil': '🇧🇷',\n      'Qatar': '🇶🇦',\n      'UAE': '🇦🇪'\n    };\n    return flagMap[country] || '🏁';\n  };\n  const formatRaceDate = (dateStr, timeStr) => {\n    const date = new Date(dateStr + 'T' + timeStr);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  const getRacesByView = () => {\n    const now = new Date();\n    return allRaces.filter(race => {\n      const raceDate = new Date(race.date);\n      return activeView === 'upcoming' ? raceDate >= now : raceDate < now;\n    }).sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      return activeView === 'upcoming' ? dateA.getTime() - dateB.getTime() : dateB.getTime() - dateA.getTime();\n    });\n  };\n  const filteredRaces = getRacesByView();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading Calendar...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"calendar-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-badge\",\n          children: \"SEASON SCHEDULE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [\"Race Calendar 2025 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"live-badge\",\n            children: \"\\uD83D\\uDD34 LIVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-subtitle\",\n          children: \"Complete schedule of all Grand Prix races\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-updated\",\n          style: {\n            textAlign: 'center',\n            color: 'var(--gray-400)',\n            fontSize: '0.85rem',\n            marginTop: '0.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u27F3 Updates automatically every 10 minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-btn ${activeView === 'upcoming' ? 'active' : ''}`,\n            onClick: () => setActiveView('upcoming'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-icon\",\n              children: \"\\uD83D\\uDD2E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Upcoming Races\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-btn ${activeView === 'previous' ? 'active' : ''}`,\n            onClick: () => setActiveView('previous'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-icon\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Previous Races\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), activeView === 'previous' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-selector\",\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"year-selector-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"year-label\",\n              children: \"\\uD83D\\uDCC5 Select Season\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"year-slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"year-nav-btn\",\n              onClick: () => setSelectedYear(Math.max(1950, selectedYear - 1)),\n              children: \"\\u25C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"year-display\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"year-value\",\n                children: selectedYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"year-nav-btn\",\n              onClick: () => setSelectedYear(Math.min(2024, selectedYear + 1)),\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            className: \"year-slider\",\n            min: \"1950\",\n            max: \"2024\",\n            value: selectedYear,\n            step: \"1\",\n            onChange: e => setSelectedYear(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"year-range-labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"1950\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"2024\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"races-grid\",\n        children: filteredRaces.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-races\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '3rem',\n              marginBottom: '1rem'\n            },\n            children: activeView === 'upcoming' ? '🏁' : '📜'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"No \", activeView === 'upcoming' ? 'Upcoming' : 'Previous', \" Races\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeView === 'upcoming' ? 'The season calendar will be announced soon!' : 'The season hasn\\'t started yet!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this) : filteredRaces.map((race, index) => {\n          const isNext = activeView === 'upcoming' && index === 0;\n          const isRecent = activeView === 'previous' && index === 0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `race-card ${isNext ? 'race-next' : ''} ${activeView === 'previous' ? 'race-past' : ''} ${isRecent ? 'race-recent' : ''}`,\n            children: [isNext && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-badge\",\n              children: \"\\u26A1 NEXT RACE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 30\n            }, this), isRecent && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"past-badge\",\n              children: \"\\u2713 LATEST RACE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 32\n            }, this), activeView === 'previous' && !isRecent && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"past-badge\",\n              children: \"\\u2713 COMPLETED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"race-flag\",\n              children: getCountryFlag(race.Circuit.Location.country)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"race-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"race-round\",\n                children: [\"ROUND \", race.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: race.raceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"race-circuit\",\n                children: race.Circuit.circuitName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"race-date\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-icon\",\n                  children: \"\\uD83D\\uDCC5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatRaceDate(race.date, race.time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"race-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item-small\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: \"Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"value\",\n                    children: race.Circuit.Location.locality\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item-small\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"label\",\n                    children: \"Round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"value\",\n                    children: [race.round, \"/\", allRaces.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, race.round, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"UhNDCcrCzk+nuzhjYe7ZIOK5nSc=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","_s","allRaces","setAllRaces","loading","setLoading","activeView","setActiveView","selectedYear","setSelectedYear","showModal","setShowModal","selectedRace","setSelectedRace","fetchRaceSchedule","fetchRacesByYear","console","log","apis","apiUrl","response","fetch","ok","_data$MRData","_data$MRData$RaceTabl","data","json","races","MRData","RaceTable","Races","length","error","warn","year","_data$MRData2","_data$MRData2$RaceTab","getCountryFlag","country","flagMap","formatRaceDate","dateStr","timeStr","date","Date","toLocaleDateString","month","day","getRacesByView","now","filter","race","raceDate","sort","a","b","dateA","dateB","getTime","filteredRaces","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","color","fontSize","marginTop","onClick","display","Math","max","min","type","value","step","onChange","e","parseInt","target","marginBottom","map","index","isNext","isRecent","Circuit","Location","round","raceName","circuitName","time","locality","_c","$RefreshReg$"],"sources":["D:/F1Demo (2)/NewProject/f1-pitwall-react/src/pages/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface Circuit {\r\n  circuitName: string;\r\n  Location: {\r\n    locality: string;\r\n    country: string;\r\n  };\r\n}\r\n\r\ninterface Race {\r\n  round: string;\r\n  raceName: string;\r\n  date: string;\r\n  time: string;\r\n  Circuit: Circuit;\r\n}\r\n\r\nconst Calendar: React.FC = () => {\r\n  const [allRaces, setAllRaces] = useState<Race[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [activeView, setActiveView] = useState<'upcoming' | 'previous'>('upcoming');\r\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [selectedRace, setSelectedRace] = useState<Race | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchRaceSchedule();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeView === 'previous') {\r\n      fetchRacesByYear(selectedYear);\r\n    }\r\n  }, [selectedYear, activeView]);\r\n\r\n  const fetchRaceSchedule = async () => {\r\n    console.log('🏎️ Loading F1 Calendar from APIs...');\r\n    \r\n    // Try multiple APIs in sequence\r\n    const apis = [\r\n      'https://api.jolpi.ca/ergast/f1/2025.json',\r\n      'http://ergast.com/api/f1/2025.json',\r\n      'https://ergast.com/api/f1/2025.json'\r\n    ];\r\n    \r\n    for (const apiUrl of apis) {\r\n      try {\r\n        console.log(`📡 Trying API: ${apiUrl}`);\r\n        const response = await fetch(apiUrl);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const races = data.MRData?.RaceTable?.Races;\r\n          if (races && races.length > 0) {\r\n            console.log(`✅ API Success! ${races.length} races loaded from ${apiUrl}`);\r\n            setAllRaces(races);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\r\n      }\r\n    }\r\n    \r\n    // All APIs failed\r\n    console.error('❌ All APIs failed, no data available');\r\n    setAllRaces([]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchRacesByYear = async (year: number) => {\r\n    console.log(`🏎️ Loading F1 Calendar for ${year}...`);\r\n    setLoading(true);\r\n    \r\n    // Try multiple APIs in sequence\r\n    const apis = [\r\n      `https://api.jolpi.ca/ergast/f1/${year}.json`,\r\n      `http://ergast.com/api/f1/${year}.json`,\r\n      `https://ergast.com/api/f1/${year}.json`\r\n    ];\r\n    \r\n    for (const apiUrl of apis) {\r\n      try {\r\n        console.log(`📡 Trying API: ${apiUrl}`);\r\n        const response = await fetch(apiUrl);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const races = data.MRData?.RaceTable?.Races;\r\n          if (races && races.length > 0) {\r\n            console.log(`✅ API Success! ${races.length} races loaded for ${year}`);\r\n            setAllRaces(races);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn(`⚠️ API failed: ${apiUrl}`, error);\r\n      }\r\n    }\r\n    \r\n    // All APIs failed\r\n    console.error(`❌ All APIs failed for year ${year}`);\r\n    setAllRaces([]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const getCountryFlag = (country: string): string => {\r\n    const flagMap: { [key: string]: string } = {\r\n      'Australia': '🇦🇺', 'China': '🇨🇳', 'Japan': '🇯🇵', 'Bahrain': '🇧🇭',\r\n      'Saudi Arabia': '🇸🇦', 'USA': '🇺🇸', 'Italy': '🇮🇹', 'Monaco': '🇲🇨',\r\n      'Spain': '🇪🇸', 'Canada': '🇨🇦', 'Austria': '🇦🇹', 'UK': '🇬🇧',\r\n      'Hungary': '🇭🇺', 'Belgium': '🇧🇪', 'Netherlands': '🇳🇱', 'Azerbaijan': '🇦🇿',\r\n      'Singapore': '🇸🇬', 'Mexico': '🇲🇽', 'Brazil': '🇧🇷', 'Qatar': '🇶🇦',\r\n      'UAE': '🇦🇪'\r\n    };\r\n    return flagMap[country] || '🏁';\r\n  };\r\n\r\n  const formatRaceDate = (dateStr: string, timeStr: string): string => {\r\n    const date = new Date(dateStr + 'T' + timeStr);\r\n    return date.toLocaleDateString('en-US', { \r\n      month: 'short', \r\n      day: 'numeric', \r\n      year: 'numeric' \r\n    });\r\n  };\r\n\r\n  const getRacesByView = () => {\r\n    const now = new Date();\r\n    return allRaces.filter(race => {\r\n      const raceDate = new Date(race.date);\r\n      return activeView === 'upcoming' ? raceDate >= now : raceDate < now;\r\n    }).sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n      return activeView === 'upcoming' \r\n        ? dateA.getTime() - dateB.getTime()\r\n        : dateB.getTime() - dateA.getTime();\r\n    });\r\n  };\r\n\r\n  const filteredRaces = getRacesByView();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"calendar-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <h2>Loading Calendar...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"calendar-section\">\r\n        <div className=\"section-header\">\r\n          <div className=\"section-badge\">SEASON SCHEDULE</div>\r\n          <h2 className=\"section-title\">Race Calendar 2025 <span className=\"live-badge\">🔴 LIVE</span></h2>\r\n          <p className=\"section-subtitle\">Complete schedule of all Grand Prix races</p>\r\n          <div className=\"last-updated\" style={{ textAlign: 'center', color: 'var(--gray-400)', fontSize: '0.85rem', marginTop: '0.5rem' }}>\r\n            <span>⟳ Updates automatically every 10 minutes</span>\r\n          </div>\r\n          \r\n          <div className=\"calendar-toggle\">\r\n            <button \r\n              className={`toggle-btn ${activeView === 'upcoming' ? 'active' : ''}`}\r\n              onClick={() => setActiveView('upcoming')}\r\n            >\r\n              <span className=\"toggle-icon\">🔮</span>\r\n              <span>Upcoming Races</span>\r\n            </button>\r\n            <button \r\n              className={`toggle-btn ${activeView === 'previous' ? 'active' : ''}`}\r\n              onClick={() => setActiveView('previous')}\r\n            >\r\n              <span className=\"toggle-icon\">✓</span>\r\n              <span>Previous Races</span>\r\n            </button>\r\n          </div>\r\n          \r\n          {activeView === 'previous' && (\r\n            <div className=\"year-selector\" style={{ display: 'block' }}>\r\n              <div className=\"year-selector-header\">\r\n                <span className=\"year-label\">📅 Select Season</span>\r\n              </div>\r\n              <div className=\"year-slider-container\">\r\n                <button \r\n                  className=\"year-nav-btn\" \r\n                  onClick={() => setSelectedYear(Math.max(1950, selectedYear - 1))}\r\n                >\r\n                  ◀\r\n                </button>\r\n                <div className=\"year-display\">\r\n                  <span className=\"year-value\">{selectedYear}</span>\r\n                </div>\r\n                <button \r\n                  className=\"year-nav-btn\" \r\n                  onClick={() => setSelectedYear(Math.min(2024, selectedYear + 1))}\r\n                >\r\n                  ▶\r\n                </button>\r\n              </div>\r\n              <input \r\n                type=\"range\" \r\n                className=\"year-slider\" \r\n                min=\"1950\" \r\n                max=\"2024\" \r\n                value={selectedYear} \r\n                step=\"1\"\r\n                onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n              />\r\n              <div className=\"year-range-labels\">\r\n                <span>1950</span>\r\n                <span>2024</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"races-grid\">\r\n          {filteredRaces.length === 0 ? (\r\n            <div className=\"no-races\">\r\n              <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\r\n                {activeView === 'upcoming' ? '🏁' : '📜'}\r\n              </div>\r\n              <h3>No {activeView === 'upcoming' ? 'Upcoming' : 'Previous'} Races</h3>\r\n              <p>\r\n                {activeView === 'upcoming' \r\n                  ? 'The season calendar will be announced soon!' \r\n                  : 'The season hasn\\'t started yet!'}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            filteredRaces.map((race, index) => {\r\n              const isNext = activeView === 'upcoming' && index === 0;\r\n              const isRecent = activeView === 'previous' && index === 0;\r\n\r\n              return (\r\n                <div \r\n                  key={race.round} \r\n                  className={`race-card ${isNext ? 'race-next' : ''} ${activeView === 'previous' ? 'race-past' : ''} ${isRecent ? 'race-recent' : ''}`}\r\n                >\r\n                  {isNext && <div className=\"next-badge\">⚡ NEXT RACE</div>}\r\n                  {isRecent && <div className=\"past-badge\">✓ LATEST RACE</div>}\r\n                  {activeView === 'previous' && !isRecent && <div className=\"past-badge\">✓ COMPLETED</div>}\r\n                  \r\n                  <div className=\"race-flag\">{getCountryFlag(race.Circuit.Location.country)}</div>\r\n                  <div className=\"race-info\">\r\n                    <div className=\"race-round\">ROUND {race.round}</div>\r\n                    <h3>{race.raceName}</h3>\r\n                    <p className=\"race-circuit\">{race.Circuit.circuitName}</p>\r\n                    <div className=\"race-date\">\r\n                      <span className=\"date-icon\">📅</span>\r\n                      <span>{formatRaceDate(race.date, race.time)}</span>\r\n                    </div>\r\n                    <div className=\"race-stats\">\r\n                      <div className=\"stat-item-small\">\r\n                        <span className=\"label\">Location</span>\r\n                        <span className=\"value\">{race.Circuit.Location.locality}</span>\r\n                      </div>\r\n                      <div className=\"stat-item-small\">\r\n                        <span className=\"label\">Round</span>\r\n                        <span className=\"value\">{race.round}/{allRaces.length}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}