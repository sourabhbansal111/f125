{"ast":null,"code":"var _jsxFileName = \"D:\\\\F1Demo (2)\\\\NewProject\\\\f1-pitwall-react\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('f1_token');\n    const storedUser = localStorage.getItem('f1_user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setIsLoading(false);\n  }, []);\n\n  // Signup function\n  const signup = async (name, email, password) => {\n    try {\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Signup failed');\n      }\n\n      // Store token and user\n      localStorage.setItem('f1_token', data.token);\n      localStorage.setItem('f1_user', JSON.stringify(data.user));\n      setToken(data.token);\n      setUser(data.user);\n    } catch (error) {\n      throw new Error(error.message || 'Signup failed');\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Store token and user\n      localStorage.setItem('f1_token', data.token);\n      localStorage.setItem('f1_user', JSON.stringify(data.user));\n      setToken(data.token);\n      setUser(data.user);\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('f1_token');\n    localStorage.removeItem('f1_user');\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      signup,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","AuthProvider","children","_s","user","setUser","token","setToken","isLoading","setIsLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","signup","name","email","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","error","setItem","message","login","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/F1Demo (2)/NewProject/f1-pitwall-react/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  signup: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('f1_token');\r\n    const storedUser = localStorage.getItem('f1_user');\r\n\r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Signup function\r\n  const signup = async (name: string, email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Signup failed');\r\n      }\r\n\r\n      // Store token and user\r\n      localStorage.setItem('f1_token', data.token);\r\n      localStorage.setItem('f1_user', JSON.stringify(data.user));\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n    } catch (error: any) {\r\n      throw new Error(error.message || 'Signup failed');\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Login failed');\r\n      }\r\n\r\n      // Store token and user\r\n      localStorage.setItem('f1_token', data.token);\r\n      localStorage.setItem('f1_user', JSON.stringify(data.user));\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n    } catch (error: any) {\r\n      throw new Error(error.message || 'Login failed');\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('f1_token');\r\n    localStorage.removeItem('f1_user');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, signup, logout, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAElD,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7BN,QAAQ,CAACG,WAAW,CAAC;MACrBL,OAAO,CAACS,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;IACAJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,MAAM,GAAG,MAAAA,CAAOC,IAAY,EAAEC,KAAa,EAAEC,QAAgB,KAAK;IACtE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGrB,OAAO,SAAS,EAAE;QAChDsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEV,IAAI,CAACW,SAAS,CAAC;UAAER,IAAI;UAAEC,KAAK;UAAEC;QAAS,CAAC;MAChD,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,eAAe,CAAC;MAChD;;MAEA;MACAnB,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACpB,KAAK,CAAC;MAC5CK,YAAY,CAACoB,OAAO,CAAC,SAAS,EAAEjB,IAAI,CAACW,SAAS,CAACC,IAAI,CAACtB,IAAI,CAAC,CAAC;MAC1DG,QAAQ,CAACmB,IAAI,CAACpB,KAAK,CAAC;MACpBD,OAAO,CAACqB,IAAI,CAACtB,IAAI,CAAC;IACpB,CAAC,CAAC,OAAO0B,KAAU,EAAE;MACnB,MAAM,IAAID,KAAK,CAACC,KAAK,CAACE,OAAO,IAAI,eAAe,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG,MAAAA,CAAOf,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGrB,OAAO,QAAQ,EAAE;QAC/CsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEV,IAAI,CAACW,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,cAAc,CAAC;MAC/C;;MAEA;MACAnB,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACpB,KAAK,CAAC;MAC5CK,YAAY,CAACoB,OAAO,CAAC,SAAS,EAAEjB,IAAI,CAACW,SAAS,CAACC,IAAI,CAACtB,IAAI,CAAC,CAAC;MAC1DG,QAAQ,CAACmB,IAAI,CAACpB,KAAK,CAAC;MACpBD,OAAO,CAACqB,IAAI,CAACtB,IAAI,CAAC;IACpB,CAAC,CAAC,OAAO0B,KAAU,EAAE;MACnB,MAAM,IAAID,KAAK,CAACC,KAAK,CAACE,OAAO,IAAI,cAAc,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBvB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;IACnCxB,YAAY,CAACwB,UAAU,CAAC,SAAS,CAAC;IAClC5B,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,IAAI;MAAEE,KAAK;MAAE2B,KAAK;MAAEjB,MAAM;MAAEkB,MAAM;MAAE1B;IAAU,CAAE;IAAAN,QAAA,EAC5EA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAtC,EAAA,CAtFaF,YAA+C;AAAAyC,EAAA,GAA/CzC,YAA+C;AAuF5D,OAAO,MAAM0C,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGpD,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI+C,OAAO,KAAK9C,SAAS,EAAE;IACzB,MAAM,IAAI8B,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOgB,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}